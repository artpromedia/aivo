name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v4.0.4
        with:
          node-version: '20.19.4'

      - name: Enable corepack
        run: corepack enable

      - name: Install dependencies
        run: pnpm install

      - name: Run lint verification
        run: pnpm verify-all

  python-lint:
    name: Python Lint & Format
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v5.3.0
        with:
          python-version: '3.11'

      - name: Install Ruff
        run: pip install ruff>=0.6.0

      - name: Run Python linting and formatting
        run: make py-fix

      - name: Check for changes
        run: |
          if ! git diff --exit-code; then
            echo "❌ Python code formatting issues found. Run 'make py-fix' locally."
            exit 1
          else
            echo "✅ Python code is properly formatted."
          fi

  python-hygiene:
    name: Python Hygiene
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v5.3.0
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install ruff>=0.6.0 pre-commit

      - name: Run ruff check (no fix)
        run: ruff check .

      - name: Run pre-commit on all files
        run: |
          pre-commit install
          pre-commit run --all-files

  contracts:
    name: Contracts
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v4.0.4
        with:
          node-version: '20.19.4'

      - name: Enable corepack
        run: corepack enable

      - name: Install dependencies
        run: pnpm install

      - name: Lint contracts
        run: pnpm contracts:lint

  compose:
    name: Docker Compose Validation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.7.1

      - name: Validate compose configuration
        run: docker compose -f infra/compose/local.yml config

  eslint9:
    name: ESLint v9 Gate
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v4.0.4
        with:
          node-version: '20.19.4'

      - name: Enable corepack
        run: corepack enable

      - name: Install dependencies
        run: pnpm install

      - name: Enforce ESLint v9
        run: node scripts/ensure-eslint9.mjs

  dep-guard:
    name: Deprecated Dependencies Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v4.0.4
        with:
          node-version: '20.19.4'

      - name: Enable corepack
        run: corepack enable

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Check for deprecated packages
        run: node scripts/check-npm-deprecations.mjs

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.28.0
        with:
          scan-type: 'fs'
          scan-ref: '.'
          severity: 'HIGH,CRITICAL'
          exit-code: '1'
