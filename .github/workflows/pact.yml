name: Pact Contract Testing

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  pact-consumer-tests:
    name: Consumer Contract Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.19.4'
          cache: 'pnpm'

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run Pact consumer tests
        run: |
          cd pact
          pnpm test:consumers

      - name: Upload Pact contracts
        uses: actions/upload-artifact@v4
        with:
          name: pact-contracts
          path: pact/contracts/
          retention-days: 7

      - name: Publish Pacts to Broker
        if: github.ref == 'refs/heads/main'
        env:
          PACT_BROKER_URL: ${{ secrets.PACT_BROKER_URL }}
          PACT_BROKER_TOKEN: ${{ secrets.PACT_BROKER_TOKEN }}
        run: |
          cd pact
          pnpm pact:publish

  pact-provider-tests:
    name: Provider Contract Verification
    runs-on: ubuntu-latest
    needs: pact-consumer-tests

    strategy:
      matrix:
        service: [admin-portal-svc, auth-svc, tenant-svc]

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.19.4'
          cache: 'pnpm'

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Download Pact contracts
        uses: actions/download-artifact@v4
        with:
          name: pact-contracts
          path: pact/contracts/

      - name: Setup Python for provider services
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry config virtualenvs.create false
          poetry install

      - name: Start provider service
        run: |
          cd services/${{ matrix.service }}
          # Start the service in background for testing
          python -m app.main &
          sleep 10
        env:
          DATABASE_URL: sqlite:///test.db
          JWT_SECRET: test-secret-key
          ENVIRONMENT: test

      - name: Run Pact provider verification
        run: |
          cd pact
          pnpm test:providers
        env:
          PROVIDER_NAME: ${{ matrix.service }}
          PROVIDER_URL: http://localhost:8080

      - name: Can I Deploy?
        if: github.ref == 'refs/heads/main'
        env:
          PACT_BROKER_URL: ${{ secrets.PACT_BROKER_URL }}
          PACT_BROKER_TOKEN: ${{ secrets.PACT_BROKER_TOKEN }}
        run: |
          cd pact
          pnpm pact:can-i-deploy --pacticipant=${{ matrix.service }} --version=${{ github.sha }}

  msw-integration-tests:
    name: MSW Integration Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.19.4'
          cache: 'pnpm'

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Install Playwright browsers
        run: |
          cd apps/admin
          npx playwright install --with-deps

      - name: Run E2E tests with MSW
        run: |
          cd apps/admin
          pnpm test:e2e
        env:
          CI: true
          MSW_ENABLED: true

      - name: Upload test results
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: apps/admin/playwright-report/
          retention-days: 7

  python-lint:
    name: Python Lint Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ruff

      - name: Run Ruff linting
        run: |
          ruff check .
          ruff format --check .
