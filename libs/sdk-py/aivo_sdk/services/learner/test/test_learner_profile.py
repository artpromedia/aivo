"""
Learner Management API

Learner profile and learning data management service

The version of the OpenAPI document: 1.0.0
Contact: api-support@aivo.com
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""  # noqa: E501

import unittest

from aivo_sdk.models.learner_profile import LearnerProfile


class TestLearnerProfile(unittest.TestCase):
    """LearnerProfile unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> LearnerProfile:
        """Test LearnerProfile
        include_optional is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # uncomment below to create an instance of `LearnerProfile`
        """
        model = LearnerProfile()
        if include_optional:
            return LearnerProfile(
                learner_id = '123e4567-e89b-12d3-a456-426614174000',
                bio = 'Passionate software engineer with 5 years of experience',
                preferences = aivo_sdk.models.learner_profile_preferences.LearnerProfile_preferences(
                    learning_style = 'visual', 
                    difficulty_level = 'intermediate', 
                    notifications_enabled = True, 
                    email_digest = True, 
                    preferred_learning_time = 'morning', ),
                skills = [
                    aivo_sdk.models.learner_profile_skills_inner.LearnerProfile_skills_inner(
                        skill_id = '', 
                        skill_name = '', 
                        level = 'beginner', 
                        verified_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                    ],
                goals = [
                    aivo_sdk.models.learner_profile_goals_inner.LearnerProfile_goals_inner(
                        goal_id = '', 
                        title = '', 
                        description = '', 
                        target_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                        status = 'active', 
                        progress = 0, )
                    ],
                interests = [JavaScript, Machine Learning, Leadership]
            )
        else:
            return LearnerProfile(
                learner_id = '123e4567-e89b-12d3-a456-426614174000',
                preferences = aivo_sdk.models.learner_profile_preferences.LearnerProfile_preferences(
                    learning_style = 'visual', 
                    difficulty_level = 'intermediate', 
                    notifications_enabled = True, 
                    email_digest = True, 
                    preferred_learning_time = 'morning', ),
                skills = [
                    aivo_sdk.models.learner_profile_skills_inner.LearnerProfile_skills_inner(
                        skill_id = '', 
                        skill_name = '', 
                        level = 'beginner', 
                        verified_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                    ],
                goals = [
                    aivo_sdk.models.learner_profile_goals_inner.LearnerProfile_goals_inner(
                        goal_id = '', 
                        title = '', 
                        description = '', 
                        target_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                        status = 'active', 
                        progress = 0, )
                    ],
        )
        """

    def testLearnerProfile(self):
        """Test LearnerProfile"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == "__main__":
    unittest.main()
