"""
Admin Portal Aggregator API

Read-only aggregator API for admin dashboard widgets and KPIs

The version of the OpenAPI document: 1.0.0
Contact: api-support@aivo.com
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""  # noqa: E501

import unittest

from aivo_sdk.models.usage_analytics_trends import UsageAnalyticsTrends


class TestUsageAnalyticsTrends(unittest.TestCase):
    """UsageAnalyticsTrends unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> UsageAnalyticsTrends:
        """Test UsageAnalyticsTrends
        include_optional is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # uncomment below to create an instance of `UsageAnalyticsTrends`
        """
        model = UsageAnalyticsTrends()
        if include_optional:
            return UsageAnalyticsTrends(
                daily_activity = [
                    aivo_sdk.models.usage_analytics_trends_daily_activity_inner.UsageAnalytics_trends_dailyActivity_inner(
                        date = '2023-12-01',
                        minutes_learned = 245,
                        active_learners = 23,
                        sessions_started = 45, )
                    ],
                peak_hours = [
                    aivo_sdk.models.usage_analytics_trends_peak_hours_inner.UsageAnalytics_trends_peakHours_inner(
                        hour = 14,
                        sessions = 156, )
                    ]
            )
        else:
            return UsageAnalyticsTrends(
        )
        """

    def testUsageAnalyticsTrends(self):
        """Test UsageAnalyticsTrends"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == "__main__":
    unittest.main()
