"""
Admin Portal Aggregator API

Read-only aggregator API for admin dashboard widgets and KPIs

The version of the OpenAPI document: 1.0.0
Contact: api-support@aivo.com
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""  # noqa: E501

import unittest

from aivo_sdk.models.namespaces_overview_top_namespaces_inner import (
    NamespacesOverviewTopNamespacesInner,
)


class TestNamespacesOverviewTopNamespacesInner(unittest.TestCase):
    """NamespacesOverviewTopNamespacesInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> NamespacesOverviewTopNamespacesInner:
        """Test NamespacesOverviewTopNamespacesInner
        include_optional is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # uncomment below to create an instance of `NamespacesOverviewTopNamespacesInner`
        """
        model = NamespacesOverviewTopNamespacesInner()
        if include_optional:
            return NamespacesOverviewTopNamespacesInner(
                namespace_id = 'ns_123e4567-e89b-12d3-a456-426614174000',
                learner_id = '123e4567-e89b-12d3-a456-426614174000',
                learner_name = 'John Doe',
                status = 'active',
                storage_used = 125,
                documents_count = 234,
                last_activity = '2023-12-01T09:15:00Z',
                vector_count = 15420
            )
        else:
            return NamespacesOverviewTopNamespacesInner(
                namespace_id = 'ns_123e4567-e89b-12d3-a456-426614174000',
                learner_id = '123e4567-e89b-12d3-a456-426614174000',
                status = 'active',
                storage_used = 125,
                last_activity = '2023-12-01T09:15:00Z',
        )
        """

    def testNamespacesOverviewTopNamespacesInner(self):
        """Test NamespacesOverviewTopNamespacesInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == "__main__":
    unittest.main()
