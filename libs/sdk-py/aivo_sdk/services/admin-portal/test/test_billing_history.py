"""
Admin Portal Aggregator API

Read-only aggregator API for admin dashboard widgets and KPIs

The version of the OpenAPI document: 1.0.0
Contact: api-support@aivo.com
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""  # noqa: E501

import unittest

from aivo_sdk.models.billing_history import BillingHistory


class TestBillingHistory(unittest.TestCase):
    """BillingHistory unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BillingHistory:
        """Test BillingHistory
        include_optional is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # uncomment below to create an instance of `BillingHistory`
        """
        model = BillingHistory()
        if include_optional:
            return BillingHistory(
                tenant_id = '456e7890-e89b-12d3-a456-426614174000',
                invoices = [
                    aivo_sdk.models.billing_history_invoices_inner.BillingHistory_invoices_inner(
                        id = 'inv_123e4567-e89b-12d3-a456-426614174000', 
                        invoice_number = 'INV-2023-001', 
                        amount = 9999.0, 
                        currency = 'USD', 
                        status = 'paid', 
                        due_date = '2023-12-31', 
                        paid_at = '2023-12-15T14:30:00Z', 
                        download_url = 'https://api.aivo.com/invoices/inv_123/download', 
                        description = 'Professional Plan - December 2023', )
                    ],
                summary = aivo_sdk.models.billing_history_summary.BillingHistory_summary(
                    total_paid = 29997.0, 
                    total_outstanding = 0.0, 
                    average_monthly_spend = 9999.0, ),
                webhooks_status = aivo_sdk.models.billing_history_webhooks_status.BillingHistory_webhooksStatus(
                    is_configured = True, 
                    last_success = '2023-12-01T10:30:00Z', 
                    failure_count = 0, 
                    endpoint = 'https://api.customer.com/aivo-webhooks', ),
                last_updated = '2023-12-01T10:30:00Z'
            )
        else:
            return BillingHistory(
                tenant_id = '456e7890-e89b-12d3-a456-426614174000',
                invoices = [
                    aivo_sdk.models.billing_history_invoices_inner.BillingHistory_invoices_inner(
                        id = 'inv_123e4567-e89b-12d3-a456-426614174000', 
                        invoice_number = 'INV-2023-001', 
                        amount = 9999.0, 
                        currency = 'USD', 
                        status = 'paid', 
                        due_date = '2023-12-31', 
                        paid_at = '2023-12-15T14:30:00Z', 
                        download_url = 'https://api.aivo.com/invoices/inv_123/download', 
                        description = 'Professional Plan - December 2023', )
                    ],
                webhooks_status = aivo_sdk.models.billing_history_webhooks_status.BillingHistory_webhooksStatus(
                    is_configured = True, 
                    last_success = '2023-12-01T10:30:00Z', 
                    failure_count = 0, 
                    endpoint = 'https://api.customer.com/aivo-webhooks', ),
                last_updated = '2023-12-01T10:30:00Z',
        )
        """

    def testBillingHistory(self):
        """Test BillingHistory"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == "__main__":
    unittest.main()
