# coding: utf-8

"""
    Admin Portal Aggregator API

    Read-only aggregator API for admin dashboard widgets and KPIs

    The version of the OpenAPI document: 1.0.0
    Contact: api-support@aivo.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from aivo_sdk.models.billing_history_invoices_inner import BillingHistoryInvoicesInner

class TestBillingHistoryInvoicesInner(unittest.TestCase):
    """BillingHistoryInvoicesInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BillingHistoryInvoicesInner:
        """Test BillingHistoryInvoicesInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BillingHistoryInvoicesInner`
        """
        model = BillingHistoryInvoicesInner()
        if include_optional:
            return BillingHistoryInvoicesInner(
                id = 'inv_123e4567-e89b-12d3-a456-426614174000',
                invoice_number = 'INV-2023-001',
                amount = 9999.0,
                currency = 'USD',
                status = 'paid',
                due_date = '2023-12-31',
                paid_at = '2023-12-15T14:30:00Z',
                download_url = 'https://api.aivo.com/invoices/inv_123/download',
                description = 'Professional Plan - December 2023'
            )
        else:
            return BillingHistoryInvoicesInner(
                id = 'inv_123e4567-e89b-12d3-a456-426614174000',
                invoice_number = 'INV-2023-001',
                amount = 9999.0,
                status = 'paid',
                due_date = '2023-12-31',
                paid_at = '2023-12-15T14:30:00Z',
        )
        """

    def testBillingHistoryInvoicesInner(self):
        """Test BillingHistoryInvoicesInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
