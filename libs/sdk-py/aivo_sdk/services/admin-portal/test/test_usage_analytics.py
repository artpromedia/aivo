# coding: utf-8

"""
    Admin Portal Aggregator API

    Read-only aggregator API for admin dashboard widgets and KPIs

    The version of the OpenAPI document: 1.0.0
    Contact: api-support@aivo.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from aivo_sdk.models.usage_analytics import UsageAnalytics

class TestUsageAnalytics(unittest.TestCase):
    """UsageAnalytics unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> UsageAnalytics:
        """Test UsageAnalytics
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `UsageAnalytics`
        """
        model = UsageAnalytics()
        if include_optional:
            return UsageAnalytics(
                tenant_id = '456e7890-e89b-12d3-a456-426614174000',
                range = '30d',
                total_minutes_learned = 12450,
                active_learners = aivo_sdk.models.usage_analytics_active_learners.UsageAnalytics_activeLearners(
                    count = 89, 
                    percentage = 65.9, ),
                average_session_length = 42.5,
                completion_stats = aivo_sdk.models.usage_analytics_completion_stats.UsageAnalytics_completionStats(
                    courses_completed = 67, 
                    modules_completed = 234, 
                    assessments_passed = 156, ),
                subject_mix = [
                    aivo_sdk.models.usage_analytics_subject_mix_inner.UsageAnalytics_subjectMix_inner(
                        subject = 'JavaScript', 
                        minutes_learned = 3245, 
                        percentage = 26.1, 
                        learner_count = 34, )
                    ],
                trends = aivo_sdk.models.usage_analytics_trends.UsageAnalytics_trends(
                    daily_activity = [
                        aivo_sdk.models.usage_analytics_trends_daily_activity_inner.UsageAnalytics_trends_dailyActivity_inner(
                            date = '2023-12-01', 
                            minutes_learned = 245, 
                            active_learners = 23, 
                            sessions_started = 45, )
                        ], 
                    peak_hours = [
                        aivo_sdk.models.usage_analytics_trends_peak_hours_inner.UsageAnalytics_trends_peakHours_inner(
                            hour = 14, 
                            sessions = 156, )
                        ], ),
                engagement = aivo_sdk.models.usage_analytics_engagement.UsageAnalytics_engagement(
                    average_streak_days = 4.2, 
                    return_rate = 73.5, ),
                last_updated = '2023-12-01T10:30:00Z'
            )
        else:
            return UsageAnalytics(
                tenant_id = '456e7890-e89b-12d3-a456-426614174000',
                range = '30d',
                total_minutes_learned = 12450,
                active_learners = aivo_sdk.models.usage_analytics_active_learners.UsageAnalytics_activeLearners(
                    count = 89, 
                    percentage = 65.9, ),
                subject_mix = [
                    aivo_sdk.models.usage_analytics_subject_mix_inner.UsageAnalytics_subjectMix_inner(
                        subject = 'JavaScript', 
                        minutes_learned = 3245, 
                        percentage = 26.1, 
                        learner_count = 34, )
                    ],
                trends = aivo_sdk.models.usage_analytics_trends.UsageAnalytics_trends(
                    daily_activity = [
                        aivo_sdk.models.usage_analytics_trends_daily_activity_inner.UsageAnalytics_trends_dailyActivity_inner(
                            date = '2023-12-01', 
                            minutes_learned = 245, 
                            active_learners = 23, 
                            sessions_started = 45, )
                        ], 
                    peak_hours = [
                        aivo_sdk.models.usage_analytics_trends_peak_hours_inner.UsageAnalytics_trends_peakHours_inner(
                            hour = 14, 
                            sessions = 156, )
                        ], ),
                last_updated = '2023-12-01T10:30:00Z',
        )
        """

    def testUsageAnalytics(self):
        """Test UsageAnalytics"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
