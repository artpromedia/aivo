# coding: utf-8

"""
    Payments & Billing API

    Subscription billing and payment processing service

    The version of the OpenAPI document: 1.0.0
    Contact: api-support@aivo.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from aivo_sdk.models.list_subscriptions200_response import ListSubscriptions200Response

class TestListSubscriptions200Response(unittest.TestCase):
    """ListSubscriptions200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListSubscriptions200Response:
        """Test ListSubscriptions200Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListSubscriptions200Response`
        """
        model = ListSubscriptions200Response()
        if include_optional:
            return ListSubscriptions200Response(
                data = [
                    aivo_sdk.models.subscription.Subscription(
                        id = 'sub_123e4567-e89b-12d3-a456-426614174000', 
                        tenant_id = '456e7890-e89b-12d3-a456-426614174000', 
                        plan_id = 'professional_monthly', 
                        status = 'active', 
                        quantity = 50, 
                        unit_amount = 4999, 
                        currency = 'usd', 
                        current_period_start = '2023-12-01T00:00:00Z', 
                        current_period_end = '2024-01-01T00:00:00Z', 
                        trial_start = '2023-11-01T00:00:00Z', 
                        trial_end = '2023-12-01T00:00:00Z', 
                        cancel_at_period_end = True, 
                        canceled_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        discount = aivo_sdk.models.discount.Discount(
                            coupon_id = 'coup_123e4567-e89b-12d3-a456-426614174000', 
                            coupon_code = 'WELCOME20', 
                            discount_type = 'percent', 
                            discount_value = 20.0, ), 
                        metadata = { }, 
                        created_at = '2023-11-01T00:00:00Z', 
                        updated_at = '2023-12-01T10:30:00Z', )
                    ],
                total = 50,
                limit = 20,
                offset = 0
            )
        else:
            return ListSubscriptions200Response(
                data = [
                    aivo_sdk.models.subscription.Subscription(
                        id = 'sub_123e4567-e89b-12d3-a456-426614174000', 
                        tenant_id = '456e7890-e89b-12d3-a456-426614174000', 
                        plan_id = 'professional_monthly', 
                        status = 'active', 
                        quantity = 50, 
                        unit_amount = 4999, 
                        currency = 'usd', 
                        current_period_start = '2023-12-01T00:00:00Z', 
                        current_period_end = '2024-01-01T00:00:00Z', 
                        trial_start = '2023-11-01T00:00:00Z', 
                        trial_end = '2023-12-01T00:00:00Z', 
                        cancel_at_period_end = True, 
                        canceled_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        discount = aivo_sdk.models.discount.Discount(
                            coupon_id = 'coup_123e4567-e89b-12d3-a456-426614174000', 
                            coupon_code = 'WELCOME20', 
                            discount_type = 'percent', 
                            discount_value = 20.0, ), 
                        metadata = { }, 
                        created_at = '2023-11-01T00:00:00Z', 
                        updated_at = '2023-12-01T10:30:00Z', )
                    ],
                total = 50,
                limit = 20,
                offset = 0,
        )
        """

    def testListSubscriptions200Response(self):
        """Test ListSubscriptions200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
