/* tslint:disable */
/* eslint-disable */
/**
 * Learner Management API
 * Learner profile and learning data management service
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api-support@aivo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Learner
 */
export interface Learner {
    /**
     * 
     * @type {string}
     * @memberof Learner
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof Learner
     */
    tenantId: string;
    /**
     * 
     * @type {string}
     * @memberof Learner
     */
    email: string;
    /**
     * 
     * @type {string}
     * @memberof Learner
     */
    firstName: string;
    /**
     * 
     * @type {string}
     * @memberof Learner
     */
    lastName: string;
    /**
     * 
     * @type {string}
     * @memberof Learner
     */
    status: LearnerStatusEnum;
    /**
     * 
     * @type {string}
     * @memberof Learner
     */
    avatar?: string;
    /**
     * 
     * @type {string}
     * @memberof Learner
     */
    timezone?: string;
    /**
     * 
     * @type {string}
     * @memberof Learner
     */
    language?: string;
    /**
     * 
     * @type {string}
     * @memberof Learner
     */
    department?: string;
    /**
     * 
     * @type {string}
     * @memberof Learner
     */
    jobTitle?: string;
    /**
     * 
     * @type {string}
     * @memberof Learner
     */
    manager?: string;
    /**
     * 
     * @type {Date}
     * @memberof Learner
     */
    lastLoginAt?: Date;
    /**
     * 
     * @type {number}
     * @memberof Learner
     */
    enrollmentCount?: number;
    /**
     * 
     * @type {number}
     * @memberof Learner
     */
    completionCount?: number;
    /**
     * 
     * @type {number}
     * @memberof Learner
     */
    totalLearningMinutes?: number;
    /**
     * 
     * @type {{ [key: string]: any; }}
     * @memberof Learner
     */
    metadata?: { [key: string]: any; };
    /**
     * 
     * @type {Date}
     * @memberof Learner
     */
    createdAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof Learner
     */
    updatedAt: Date;
}


/**
 * @export
 */
export const LearnerStatusEnum = {
    Active: 'active',
    Inactive: 'inactive',
    Pending: 'pending',
    Suspended: 'suspended'
} as const;
export type LearnerStatusEnum = typeof LearnerStatusEnum[keyof typeof LearnerStatusEnum];


/**
 * Check if a given object implements the Learner interface.
 */
export function instanceOfLearner(value: object): value is Learner {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('tenantId' in value) || value['tenantId'] === undefined) return false;
    if (!('email' in value) || value['email'] === undefined) return false;
    if (!('firstName' in value) || value['firstName'] === undefined) return false;
    if (!('lastName' in value) || value['lastName'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined) return false;
    return true;
}

export function LearnerFromJSON(json: any): Learner {
    return LearnerFromJSONTyped(json, false);
}

export function LearnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): Learner {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'tenantId': json['tenantId'],
        'email': json['email'],
        'firstName': json['firstName'],
        'lastName': json['lastName'],
        'status': json['status'],
        'avatar': json['avatar'] == null ? undefined : json['avatar'],
        'timezone': json['timezone'] == null ? undefined : json['timezone'],
        'language': json['language'] == null ? undefined : json['language'],
        'department': json['department'] == null ? undefined : json['department'],
        'jobTitle': json['jobTitle'] == null ? undefined : json['jobTitle'],
        'manager': json['manager'] == null ? undefined : json['manager'],
        'lastLoginAt': json['lastLoginAt'] == null ? undefined : (new Date(json['lastLoginAt'])),
        'enrollmentCount': json['enrollmentCount'] == null ? undefined : json['enrollmentCount'],
        'completionCount': json['completionCount'] == null ? undefined : json['completionCount'],
        'totalLearningMinutes': json['totalLearningMinutes'] == null ? undefined : json['totalLearningMinutes'],
        'metadata': json['metadata'] == null ? undefined : json['metadata'],
        'createdAt': (new Date(json['createdAt'])),
        'updatedAt': (new Date(json['updatedAt'])),
    };
}

export function LearnerToJSON(json: any): Learner {
    return LearnerToJSONTyped(json, false);
}

export function LearnerToJSONTyped(value?: Learner | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'tenantId': value['tenantId'],
        'email': value['email'],
        'firstName': value['firstName'],
        'lastName': value['lastName'],
        'status': value['status'],
        'avatar': value['avatar'],
        'timezone': value['timezone'],
        'language': value['language'],
        'department': value['department'],
        'jobTitle': value['jobTitle'],
        'manager': value['manager'],
        'lastLoginAt': value['lastLoginAt'] == null ? undefined : ((value['lastLoginAt']).toISOString()),
        'enrollmentCount': value['enrollmentCount'],
        'completionCount': value['completionCount'],
        'totalLearningMinutes': value['totalLearningMinutes'],
        'metadata': value['metadata'],
        'createdAt': ((value['createdAt']).toISOString()),
        'updatedAt': ((value['updatedAt']).toISOString()),
    };
}

