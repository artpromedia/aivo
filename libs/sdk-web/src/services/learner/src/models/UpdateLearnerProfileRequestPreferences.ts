/* tslint:disable */
/* eslint-disable */
/**
 * Learner Management API
 * Learner profile and learning data management service
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api-support@aivo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UpdateLearnerProfileRequestPreferences
 */
export interface UpdateLearnerProfileRequestPreferences {
    /**
     * 
     * @type {string}
     * @memberof UpdateLearnerProfileRequestPreferences
     */
    learningStyle?: UpdateLearnerProfileRequestPreferencesLearningStyleEnum;
    /**
     * 
     * @type {string}
     * @memberof UpdateLearnerProfileRequestPreferences
     */
    difficultyLevel?: UpdateLearnerProfileRequestPreferencesDifficultyLevelEnum;
    /**
     * 
     * @type {boolean}
     * @memberof UpdateLearnerProfileRequestPreferences
     */
    notificationsEnabled?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof UpdateLearnerProfileRequestPreferences
     */
    emailDigest?: boolean;
    /**
     * 
     * @type {string}
     * @memberof UpdateLearnerProfileRequestPreferences
     */
    preferredLearningTime?: UpdateLearnerProfileRequestPreferencesPreferredLearningTimeEnum;
}


/**
 * @export
 */
export const UpdateLearnerProfileRequestPreferencesLearningStyleEnum = {
    Visual: 'visual',
    Auditory: 'auditory',
    Kinesthetic: 'kinesthetic',
    Reading: 'reading'
} as const;
export type UpdateLearnerProfileRequestPreferencesLearningStyleEnum = typeof UpdateLearnerProfileRequestPreferencesLearningStyleEnum[keyof typeof UpdateLearnerProfileRequestPreferencesLearningStyleEnum];

/**
 * @export
 */
export const UpdateLearnerProfileRequestPreferencesDifficultyLevelEnum = {
    Beginner: 'beginner',
    Intermediate: 'intermediate',
    Advanced: 'advanced'
} as const;
export type UpdateLearnerProfileRequestPreferencesDifficultyLevelEnum = typeof UpdateLearnerProfileRequestPreferencesDifficultyLevelEnum[keyof typeof UpdateLearnerProfileRequestPreferencesDifficultyLevelEnum];

/**
 * @export
 */
export const UpdateLearnerProfileRequestPreferencesPreferredLearningTimeEnum = {
    Morning: 'morning',
    Afternoon: 'afternoon',
    Evening: 'evening',
    Night: 'night'
} as const;
export type UpdateLearnerProfileRequestPreferencesPreferredLearningTimeEnum = typeof UpdateLearnerProfileRequestPreferencesPreferredLearningTimeEnum[keyof typeof UpdateLearnerProfileRequestPreferencesPreferredLearningTimeEnum];


/**
 * Check if a given object implements the UpdateLearnerProfileRequestPreferences interface.
 */
export function instanceOfUpdateLearnerProfileRequestPreferences(value: object): value is UpdateLearnerProfileRequestPreferences {
    return true;
}

export function UpdateLearnerProfileRequestPreferencesFromJSON(json: any): UpdateLearnerProfileRequestPreferences {
    return UpdateLearnerProfileRequestPreferencesFromJSONTyped(json, false);
}

export function UpdateLearnerProfileRequestPreferencesFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateLearnerProfileRequestPreferences {
    if (json == null) {
        return json;
    }
    return {
        
        'learningStyle': json['learningStyle'] == null ? undefined : json['learningStyle'],
        'difficultyLevel': json['difficultyLevel'] == null ? undefined : json['difficultyLevel'],
        'notificationsEnabled': json['notificationsEnabled'] == null ? undefined : json['notificationsEnabled'],
        'emailDigest': json['emailDigest'] == null ? undefined : json['emailDigest'],
        'preferredLearningTime': json['preferredLearningTime'] == null ? undefined : json['preferredLearningTime'],
    };
}

export function UpdateLearnerProfileRequestPreferencesToJSON(json: any): UpdateLearnerProfileRequestPreferences {
    return UpdateLearnerProfileRequestPreferencesToJSONTyped(json, false);
}

export function UpdateLearnerProfileRequestPreferencesToJSONTyped(value?: UpdateLearnerProfileRequestPreferences | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'learningStyle': value['learningStyle'],
        'difficultyLevel': value['difficultyLevel'],
        'notificationsEnabled': value['notificationsEnabled'],
        'emailDigest': value['emailDigest'],
        'preferredLearningTime': value['preferredLearningTime'],
    };
}

