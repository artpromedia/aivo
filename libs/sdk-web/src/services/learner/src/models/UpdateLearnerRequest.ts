/* tslint:disable */
/* eslint-disable */
/**
 * Learner Management API
 * Learner profile and learning data management service
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api-support@aivo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UpdateLearnerRequest
 */
export interface UpdateLearnerRequest {
    /**
     * 
     * @type {string}
     * @memberof UpdateLearnerRequest
     */
    firstName?: string;
    /**
     * 
     * @type {string}
     * @memberof UpdateLearnerRequest
     */
    lastName?: string;
    /**
     * 
     * @type {string}
     * @memberof UpdateLearnerRequest
     */
    status?: UpdateLearnerRequestStatusEnum;
    /**
     * 
     * @type {string}
     * @memberof UpdateLearnerRequest
     */
    timezone?: string;
    /**
     * 
     * @type {string}
     * @memberof UpdateLearnerRequest
     */
    language?: string;
    /**
     * 
     * @type {string}
     * @memberof UpdateLearnerRequest
     */
    department?: string;
    /**
     * 
     * @type {string}
     * @memberof UpdateLearnerRequest
     */
    jobTitle?: string;
    /**
     * 
     * @type {string}
     * @memberof UpdateLearnerRequest
     */
    manager?: string;
    /**
     * 
     * @type {{ [key: string]: any; }}
     * @memberof UpdateLearnerRequest
     */
    metadata?: { [key: string]: any; };
}


/**
 * @export
 */
export const UpdateLearnerRequestStatusEnum = {
    Active: 'active',
    Inactive: 'inactive',
    Pending: 'pending',
    Suspended: 'suspended'
} as const;
export type UpdateLearnerRequestStatusEnum = typeof UpdateLearnerRequestStatusEnum[keyof typeof UpdateLearnerRequestStatusEnum];


/**
 * Check if a given object implements the UpdateLearnerRequest interface.
 */
export function instanceOfUpdateLearnerRequest(value: object): value is UpdateLearnerRequest {
    return true;
}

export function UpdateLearnerRequestFromJSON(json: any): UpdateLearnerRequest {
    return UpdateLearnerRequestFromJSONTyped(json, false);
}

export function UpdateLearnerRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateLearnerRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'firstName': json['firstName'] == null ? undefined : json['firstName'],
        'lastName': json['lastName'] == null ? undefined : json['lastName'],
        'status': json['status'] == null ? undefined : json['status'],
        'timezone': json['timezone'] == null ? undefined : json['timezone'],
        'language': json['language'] == null ? undefined : json['language'],
        'department': json['department'] == null ? undefined : json['department'],
        'jobTitle': json['jobTitle'] == null ? undefined : json['jobTitle'],
        'manager': json['manager'] == null ? undefined : json['manager'],
        'metadata': json['metadata'] == null ? undefined : json['metadata'],
    };
}

export function UpdateLearnerRequestToJSON(json: any): UpdateLearnerRequest {
    return UpdateLearnerRequestToJSONTyped(json, false);
}

export function UpdateLearnerRequestToJSONTyped(value?: UpdateLearnerRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'firstName': value['firstName'],
        'lastName': value['lastName'],
        'status': value['status'],
        'timezone': value['timezone'],
        'language': value['language'],
        'department': value['department'],
        'jobTitle': value['jobTitle'],
        'manager': value['manager'],
        'metadata': value['metadata'],
    };
}

