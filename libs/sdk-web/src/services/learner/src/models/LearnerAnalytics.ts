/* tslint:disable */
/* eslint-disable */
/**
 * Learner Management API
 * Learner profile and learning data management service
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api-support@aivo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { LearnerAnalyticsActivityDataInner } from './LearnerAnalyticsActivityDataInner';
import {
    LearnerAnalyticsActivityDataInnerFromJSON,
    LearnerAnalyticsActivityDataInnerFromJSONTyped,
    LearnerAnalyticsActivityDataInnerToJSON,
    LearnerAnalyticsActivityDataInnerToJSONTyped,
} from './LearnerAnalyticsActivityDataInner';
import type { LearnerAnalyticsSubjectBreakdownInner } from './LearnerAnalyticsSubjectBreakdownInner';
import {
    LearnerAnalyticsSubjectBreakdownInnerFromJSON,
    LearnerAnalyticsSubjectBreakdownInnerFromJSONTyped,
    LearnerAnalyticsSubjectBreakdownInnerToJSON,
    LearnerAnalyticsSubjectBreakdownInnerToJSONTyped,
} from './LearnerAnalyticsSubjectBreakdownInner';

/**
 * 
 * @export
 * @interface LearnerAnalytics
 */
export interface LearnerAnalytics {
    /**
     * 
     * @type {string}
     * @memberof LearnerAnalytics
     */
    learnerId: string;
    /**
     * 
     * @type {string}
     * @memberof LearnerAnalytics
     */
    range: string;
    /**
     * Total learning time in minutes
     * @type {number}
     * @memberof LearnerAnalytics
     */
    totalLearningTime: number;
    /**
     * 
     * @type {number}
     * @memberof LearnerAnalytics
     */
    completionRate: number;
    /**
     * 
     * @type {number}
     * @memberof LearnerAnalytics
     */
    streakDays: number;
    /**
     * 
     * @type {number}
     * @memberof LearnerAnalytics
     */
    coursesStarted?: number;
    /**
     * 
     * @type {number}
     * @memberof LearnerAnalytics
     */
    coursesCompleted?: number;
    /**
     * Average session length in minutes
     * @type {number}
     * @memberof LearnerAnalytics
     */
    averageSessionLength?: number;
    /**
     * 
     * @type {Array<LearnerAnalyticsActivityDataInner>}
     * @memberof LearnerAnalytics
     */
    activityData: Array<LearnerAnalyticsActivityDataInner>;
    /**
     * 
     * @type {Array<LearnerAnalyticsSubjectBreakdownInner>}
     * @memberof LearnerAnalytics
     */
    subjectBreakdown?: Array<LearnerAnalyticsSubjectBreakdownInner>;
}

/**
 * Check if a given object implements the LearnerAnalytics interface.
 */
export function instanceOfLearnerAnalytics(value: object): value is LearnerAnalytics {
    if (!('learnerId' in value) || value['learnerId'] === undefined) return false;
    if (!('range' in value) || value['range'] === undefined) return false;
    if (!('totalLearningTime' in value) || value['totalLearningTime'] === undefined) return false;
    if (!('completionRate' in value) || value['completionRate'] === undefined) return false;
    if (!('streakDays' in value) || value['streakDays'] === undefined) return false;
    if (!('activityData' in value) || value['activityData'] === undefined) return false;
    return true;
}

export function LearnerAnalyticsFromJSON(json: any): LearnerAnalytics {
    return LearnerAnalyticsFromJSONTyped(json, false);
}

export function LearnerAnalyticsFromJSONTyped(json: any, ignoreDiscriminator: boolean): LearnerAnalytics {
    if (json == null) {
        return json;
    }
    return {
        
        'learnerId': json['learnerId'],
        'range': json['range'],
        'totalLearningTime': json['totalLearningTime'],
        'completionRate': json['completionRate'],
        'streakDays': json['streakDays'],
        'coursesStarted': json['coursesStarted'] == null ? undefined : json['coursesStarted'],
        'coursesCompleted': json['coursesCompleted'] == null ? undefined : json['coursesCompleted'],
        'averageSessionLength': json['averageSessionLength'] == null ? undefined : json['averageSessionLength'],
        'activityData': ((json['activityData'] as Array<any>).map(LearnerAnalyticsActivityDataInnerFromJSON)),
        'subjectBreakdown': json['subjectBreakdown'] == null ? undefined : ((json['subjectBreakdown'] as Array<any>).map(LearnerAnalyticsSubjectBreakdownInnerFromJSON)),
    };
}

export function LearnerAnalyticsToJSON(json: any): LearnerAnalytics {
    return LearnerAnalyticsToJSONTyped(json, false);
}

export function LearnerAnalyticsToJSONTyped(value?: LearnerAnalytics | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'learnerId': value['learnerId'],
        'range': value['range'],
        'totalLearningTime': value['totalLearningTime'],
        'completionRate': value['completionRate'],
        'streakDays': value['streakDays'],
        'coursesStarted': value['coursesStarted'],
        'coursesCompleted': value['coursesCompleted'],
        'averageSessionLength': value['averageSessionLength'],
        'activityData': ((value['activityData'] as Array<any>).map(LearnerAnalyticsActivityDataInnerToJSON)),
        'subjectBreakdown': value['subjectBreakdown'] == null ? undefined : ((value['subjectBreakdown'] as Array<any>).map(LearnerAnalyticsSubjectBreakdownInnerToJSON)),
    };
}

