/* tslint:disable */
/* eslint-disable */
/**
 * Enrollment Management API
 * Learner enrollment and course assignment service
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api-support@aivo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Enrollment
 */
export interface Enrollment {
    /**
     * 
     * @type {string}
     * @memberof Enrollment
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof Enrollment
     */
    tenantId: string;
    /**
     * 
     * @type {string}
     * @memberof Enrollment
     */
    learnerId: string;
    /**
     * 
     * @type {string}
     * @memberof Enrollment
     */
    courseId: string;
    /**
     * 
     * @type {string}
     * @memberof Enrollment
     */
    status: EnrollmentStatusEnum;
    /**
     * 
     * @type {Date}
     * @memberof Enrollment
     */
    enrolledAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof Enrollment
     */
    startedAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof Enrollment
     */
    completedAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof Enrollment
     */
    expiresAt?: Date;
    /**
     * 
     * @type {string}
     * @memberof Enrollment
     */
    enrolledBy?: string;
    /**
     * 
     * @type {{ [key: string]: any; }}
     * @memberof Enrollment
     */
    metadata?: { [key: string]: any; };
    /**
     * 
     * @type {Date}
     * @memberof Enrollment
     */
    createdAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof Enrollment
     */
    updatedAt: Date;
}


/**
 * @export
 */
export const EnrollmentStatusEnum = {
    Enrolled: 'enrolled',
    InProgress: 'in_progress',
    Completed: 'completed',
    Dropped: 'dropped',
    Expired: 'expired'
} as const;
export type EnrollmentStatusEnum = typeof EnrollmentStatusEnum[keyof typeof EnrollmentStatusEnum];


/**
 * Check if a given object implements the Enrollment interface.
 */
export function instanceOfEnrollment(value: object): value is Enrollment {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('tenantId' in value) || value['tenantId'] === undefined) return false;
    if (!('learnerId' in value) || value['learnerId'] === undefined) return false;
    if (!('courseId' in value) || value['courseId'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('enrolledAt' in value) || value['enrolledAt'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined) return false;
    return true;
}

export function EnrollmentFromJSON(json: any): Enrollment {
    return EnrollmentFromJSONTyped(json, false);
}

export function EnrollmentFromJSONTyped(json: any, ignoreDiscriminator: boolean): Enrollment {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'tenantId': json['tenantId'],
        'learnerId': json['learnerId'],
        'courseId': json['courseId'],
        'status': json['status'],
        'enrolledAt': (new Date(json['enrolledAt'])),
        'startedAt': json['startedAt'] == null ? undefined : (new Date(json['startedAt'])),
        'completedAt': json['completedAt'] == null ? undefined : (new Date(json['completedAt'])),
        'expiresAt': json['expiresAt'] == null ? undefined : (new Date(json['expiresAt'])),
        'enrolledBy': json['enrolledBy'] == null ? undefined : json['enrolledBy'],
        'metadata': json['metadata'] == null ? undefined : json['metadata'],
        'createdAt': (new Date(json['createdAt'])),
        'updatedAt': (new Date(json['updatedAt'])),
    };
}

export function EnrollmentToJSON(json: any): Enrollment {
    return EnrollmentToJSONTyped(json, false);
}

export function EnrollmentToJSONTyped(value?: Enrollment | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'tenantId': value['tenantId'],
        'learnerId': value['learnerId'],
        'courseId': value['courseId'],
        'status': value['status'],
        'enrolledAt': ((value['enrolledAt']).toISOString()),
        'startedAt': value['startedAt'] == null ? undefined : ((value['startedAt']).toISOString()),
        'completedAt': value['completedAt'] == null ? undefined : ((value['completedAt']).toISOString()),
        'expiresAt': value['expiresAt'] == null ? undefined : ((value['expiresAt']).toISOString()),
        'enrolledBy': value['enrolledBy'],
        'metadata': value['metadata'],
        'createdAt': ((value['createdAt']).toISOString()),
        'updatedAt': ((value['updatedAt']).toISOString()),
    };
}

