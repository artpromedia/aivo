/* tslint:disable */
/* eslint-disable */
/**
 * Tenant Management API
 * Multi-tenant organization management service
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api-support@aivo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TenantSettingsNotifications
 */
export interface TenantSettingsNotifications {
    /**
     * 
     * @type {boolean}
     * @memberof TenantSettingsNotifications
     */
    emailNotifications?: boolean;
    /**
     * 
     * @type {string}
     * @memberof TenantSettingsNotifications
     */
    slackWebhook?: string;
    /**
     * 
     * @type {string}
     * @memberof TenantSettingsNotifications
     */
    webhookUrl?: string;
}

/**
 * Check if a given object implements the TenantSettingsNotifications interface.
 */
export function instanceOfTenantSettingsNotifications(value: object): value is TenantSettingsNotifications {
    return true;
}

export function TenantSettingsNotificationsFromJSON(json: any): TenantSettingsNotifications {
    return TenantSettingsNotificationsFromJSONTyped(json, false);
}

export function TenantSettingsNotificationsFromJSONTyped(json: any, ignoreDiscriminator: boolean): TenantSettingsNotifications {
    if (json == null) {
        return json;
    }
    return {
        
        'emailNotifications': json['emailNotifications'] == null ? undefined : json['emailNotifications'],
        'slackWebhook': json['slackWebhook'] == null ? undefined : json['slackWebhook'],
        'webhookUrl': json['webhookUrl'] == null ? undefined : json['webhookUrl'],
    };
}

export function TenantSettingsNotificationsToJSON(json: any): TenantSettingsNotifications {
    return TenantSettingsNotificationsToJSONTyped(json, false);
}

export function TenantSettingsNotificationsToJSONTyped(value?: TenantSettingsNotifications | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'emailNotifications': value['emailNotifications'],
        'slackWebhook': value['slackWebhook'],
        'webhookUrl': value['webhookUrl'],
    };
}

