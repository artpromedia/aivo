/* tslint:disable */
/* eslint-disable */
/**
 * Tenant Management API
 * Multi-tenant organization management service
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api-support@aivo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TenantSettingsBranding } from './TenantSettingsBranding';
import {
    TenantSettingsBrandingFromJSON,
    TenantSettingsBrandingFromJSONTyped,
    TenantSettingsBrandingToJSON,
    TenantSettingsBrandingToJSONTyped,
} from './TenantSettingsBranding';
import type { TenantSettingsFeatures } from './TenantSettingsFeatures';
import {
    TenantSettingsFeaturesFromJSON,
    TenantSettingsFeaturesFromJSONTyped,
    TenantSettingsFeaturesToJSON,
    TenantSettingsFeaturesToJSONTyped,
} from './TenantSettingsFeatures';
import type { TenantSettingsNotifications } from './TenantSettingsNotifications';
import {
    TenantSettingsNotificationsFromJSON,
    TenantSettingsNotificationsFromJSONTyped,
    TenantSettingsNotificationsToJSON,
    TenantSettingsNotificationsToJSONTyped,
} from './TenantSettingsNotifications';

/**
 * 
 * @export
 * @interface TenantSettings
 */
export interface TenantSettings {
    /**
     * 
     * @type {string}
     * @memberof TenantSettings
     */
    tenantId: string;
    /**
     * 
     * @type {TenantSettingsFeatures}
     * @memberof TenantSettings
     */
    features: TenantSettingsFeatures;
    /**
     * 
     * @type {TenantSettingsBranding}
     * @memberof TenantSettings
     */
    branding: TenantSettingsBranding;
    /**
     * 
     * @type {TenantSettingsNotifications}
     * @memberof TenantSettings
     */
    notifications: TenantSettingsNotifications;
}

/**
 * Check if a given object implements the TenantSettings interface.
 */
export function instanceOfTenantSettings(value: object): value is TenantSettings {
    if (!('tenantId' in value) || value['tenantId'] === undefined) return false;
    if (!('features' in value) || value['features'] === undefined) return false;
    if (!('branding' in value) || value['branding'] === undefined) return false;
    if (!('notifications' in value) || value['notifications'] === undefined) return false;
    return true;
}

export function TenantSettingsFromJSON(json: any): TenantSettings {
    return TenantSettingsFromJSONTyped(json, false);
}

export function TenantSettingsFromJSONTyped(json: any, ignoreDiscriminator: boolean): TenantSettings {
    if (json == null) {
        return json;
    }
    return {
        
        'tenantId': json['tenantId'],
        'features': TenantSettingsFeaturesFromJSON(json['features']),
        'branding': TenantSettingsBrandingFromJSON(json['branding']),
        'notifications': TenantSettingsNotificationsFromJSON(json['notifications']),
    };
}

export function TenantSettingsToJSON(json: any): TenantSettings {
    return TenantSettingsToJSONTyped(json, false);
}

export function TenantSettingsToJSONTyped(value?: TenantSettings | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'tenantId': value['tenantId'],
        'features': TenantSettingsFeaturesToJSON(value['features']),
        'branding': TenantSettingsBrandingToJSON(value['branding']),
        'notifications': TenantSettingsNotificationsToJSON(value['notifications']),
    };
}

