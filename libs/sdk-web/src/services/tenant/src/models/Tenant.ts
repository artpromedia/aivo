/* tslint:disable */
/* eslint-disable */
/**
 * Tenant Management API
 * Multi-tenant organization management service
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api-support@aivo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Tenant
 */
export interface Tenant {
    /**
     * 
     * @type {string}
     * @memberof Tenant
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof Tenant
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof Tenant
     */
    slug: string;
    /**
     * 
     * @type {string}
     * @memberof Tenant
     */
    description?: string;
    /**
     * 
     * @type {string}
     * @memberof Tenant
     */
    logo?: string;
    /**
     * 
     * @type {string}
     * @memberof Tenant
     */
    website?: string;
    /**
     * 
     * @type {string}
     * @memberof Tenant
     */
    status: TenantStatusEnum;
    /**
     * 
     * @type {string}
     * @memberof Tenant
     */
    plan: TenantPlanEnum;
    /**
     * 
     * @type {number}
     * @memberof Tenant
     */
    maxUsers?: number;
    /**
     * 
     * @type {number}
     * @memberof Tenant
     */
    maxSeats?: number;
    /**
     * 
     * @type {Date}
     * @memberof Tenant
     */
    trialEndsAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof Tenant
     */
    createdAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof Tenant
     */
    updatedAt: Date;
}


/**
 * @export
 */
export const TenantStatusEnum = {
    Active: 'active',
    Inactive: 'inactive',
    Trial: 'trial',
    Suspended: 'suspended'
} as const;
export type TenantStatusEnum = typeof TenantStatusEnum[keyof typeof TenantStatusEnum];

/**
 * @export
 */
export const TenantPlanEnum = {
    Free: 'free',
    Starter: 'starter',
    Professional: 'professional',
    Enterprise: 'enterprise'
} as const;
export type TenantPlanEnum = typeof TenantPlanEnum[keyof typeof TenantPlanEnum];


/**
 * Check if a given object implements the Tenant interface.
 */
export function instanceOfTenant(value: object): value is Tenant {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('slug' in value) || value['slug'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('plan' in value) || value['plan'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined) return false;
    return true;
}

export function TenantFromJSON(json: any): Tenant {
    return TenantFromJSONTyped(json, false);
}

export function TenantFromJSONTyped(json: any, ignoreDiscriminator: boolean): Tenant {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'slug': json['slug'],
        'description': json['description'] == null ? undefined : json['description'],
        'logo': json['logo'] == null ? undefined : json['logo'],
        'website': json['website'] == null ? undefined : json['website'],
        'status': json['status'],
        'plan': json['plan'],
        'maxUsers': json['maxUsers'] == null ? undefined : json['maxUsers'],
        'maxSeats': json['maxSeats'] == null ? undefined : json['maxSeats'],
        'trialEndsAt': json['trialEndsAt'] == null ? undefined : (new Date(json['trialEndsAt'])),
        'createdAt': (new Date(json['createdAt'])),
        'updatedAt': (new Date(json['updatedAt'])),
    };
}

export function TenantToJSON(json: any): Tenant {
    return TenantToJSONTyped(json, false);
}

export function TenantToJSONTyped(value?: Tenant | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'name': value['name'],
        'slug': value['slug'],
        'description': value['description'],
        'logo': value['logo'],
        'website': value['website'],
        'status': value['status'],
        'plan': value['plan'],
        'maxUsers': value['maxUsers'],
        'maxSeats': value['maxSeats'],
        'trialEndsAt': value['trialEndsAt'] == null ? undefined : ((value['trialEndsAt']).toISOString()),
        'createdAt': ((value['createdAt']).toISOString()),
        'updatedAt': ((value['updatedAt']).toISOString()),
    };
}

