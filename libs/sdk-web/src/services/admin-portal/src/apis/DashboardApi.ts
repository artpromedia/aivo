/* tslint:disable */
/* eslint-disable */
/**
 * Admin Portal Aggregator API
 * Read-only aggregator API for admin dashboard widgets and KPIs
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api-support@aivo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  TenantSummary,
} from '../models/index';
import {
    TenantSummaryFromJSON,
    TenantSummaryToJSON,
} from '../models/index';

export interface GetTenantSummaryRequest {
    tenantId: string;
}

/**
 * 
 */
export class DashboardApi extends runtime.BaseAPI {

    /**
     * Get tenant KPI summary
     */
    async getTenantSummaryRaw(requestParameters: GetTenantSummaryRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<TenantSummary>> {
        if (requestParameters['tenantId'] == null) {
            throw new runtime.RequiredError(
                'tenantId',
                'Required parameter "tenantId" was null or undefined when calling getTenantSummary().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['tenantId'] != null) {
            queryParameters['tenantId'] = requestParameters['tenantId'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("bearerAuth", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }

        let urlPath = `/summary`;

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => TenantSummaryFromJSON(jsonValue));
    }

    /**
     * Get tenant KPI summary
     */
    async getTenantSummary(requestParameters: GetTenantSummaryRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<TenantSummary> {
        const response = await this.getTenantSummaryRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
