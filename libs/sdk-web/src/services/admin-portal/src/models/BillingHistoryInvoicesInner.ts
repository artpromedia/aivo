/* tslint:disable */
/* eslint-disable */
/**
 * Admin Portal Aggregator API
 * Read-only aggregator API for admin dashboard widgets and KPIs
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api-support@aivo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface BillingHistoryInvoicesInner
 */
export interface BillingHistoryInvoicesInner {
    /**
     * 
     * @type {string}
     * @memberof BillingHistoryInvoicesInner
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof BillingHistoryInvoicesInner
     */
    invoiceNumber: string;
    /**
     * Invoice amount
     * @type {number}
     * @memberof BillingHistoryInvoicesInner
     */
    amount: number;
    /**
     * 
     * @type {string}
     * @memberof BillingHistoryInvoicesInner
     */
    currency?: string;
    /**
     * 
     * @type {string}
     * @memberof BillingHistoryInvoicesInner
     */
    status: BillingHistoryInvoicesInnerStatusEnum;
    /**
     * 
     * @type {Date}
     * @memberof BillingHistoryInvoicesInner
     */
    dueDate: Date;
    /**
     * 
     * @type {Date}
     * @memberof BillingHistoryInvoicesInner
     */
    paidAt: Date;
    /**
     * 
     * @type {string}
     * @memberof BillingHistoryInvoicesInner
     */
    downloadUrl?: string;
    /**
     * 
     * @type {string}
     * @memberof BillingHistoryInvoicesInner
     */
    description?: string;
}


/**
 * @export
 */
export const BillingHistoryInvoicesInnerStatusEnum = {
    Draft: 'draft',
    Open: 'open',
    Paid: 'paid',
    Void: 'void',
    Uncollectible: 'uncollectible'
} as const;
export type BillingHistoryInvoicesInnerStatusEnum = typeof BillingHistoryInvoicesInnerStatusEnum[keyof typeof BillingHistoryInvoicesInnerStatusEnum];


/**
 * Check if a given object implements the BillingHistoryInvoicesInner interface.
 */
export function instanceOfBillingHistoryInvoicesInner(value: object): value is BillingHistoryInvoicesInner {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('invoiceNumber' in value) || value['invoiceNumber'] === undefined) return false;
    if (!('amount' in value) || value['amount'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('dueDate' in value) || value['dueDate'] === undefined) return false;
    if (!('paidAt' in value) || value['paidAt'] === undefined) return false;
    return true;
}

export function BillingHistoryInvoicesInnerFromJSON(json: any): BillingHistoryInvoicesInner {
    return BillingHistoryInvoicesInnerFromJSONTyped(json, false);
}

export function BillingHistoryInvoicesInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): BillingHistoryInvoicesInner {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'invoiceNumber': json['invoiceNumber'],
        'amount': json['amount'],
        'currency': json['currency'] == null ? undefined : json['currency'],
        'status': json['status'],
        'dueDate': (new Date(json['dueDate'])),
        'paidAt': (new Date(json['paidAt'])),
        'downloadUrl': json['downloadUrl'] == null ? undefined : json['downloadUrl'],
        'description': json['description'] == null ? undefined : json['description'],
    };
}

export function BillingHistoryInvoicesInnerToJSON(json: any): BillingHistoryInvoicesInner {
    return BillingHistoryInvoicesInnerToJSONTyped(json, false);
}

export function BillingHistoryInvoicesInnerToJSONTyped(value?: BillingHistoryInvoicesInner | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'invoiceNumber': value['invoiceNumber'],
        'amount': value['amount'],
        'currency': value['currency'],
        'status': value['status'],
        'dueDate': ((value['dueDate']).toISOString().substring(0,10)),
        'paidAt': ((value['paidAt']).toISOString()),
        'downloadUrl': value['downloadUrl'],
        'description': value['description'],
    };
}

