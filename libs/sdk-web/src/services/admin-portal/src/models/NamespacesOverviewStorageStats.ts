/* tslint:disable */
/* eslint-disable */
/**
 * Admin Portal Aggregator API
 * Read-only aggregator API for admin dashboard widgets and KPIs
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api-support@aivo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface NamespacesOverviewStorageStats
 */
export interface NamespacesOverviewStorageStats {
    /**
     * Total storage used across all namespaces (MB)
     * @type {number}
     * @memberof NamespacesOverviewStorageStats
     */
    totalStorageUsed?: number;
    /**
     * Average storage per namespace (MB)
     * @type {number}
     * @memberof NamespacesOverviewStorageStats
     */
    averageStoragePerNamespace?: number;
    /**
     * Maximum storage used by a single namespace (MB)
     * @type {number}
     * @memberof NamespacesOverviewStorageStats
     */
    maxStorageUsed?: number;
}

/**
 * Check if a given object implements the NamespacesOverviewStorageStats interface.
 */
export function instanceOfNamespacesOverviewStorageStats(value: object): value is NamespacesOverviewStorageStats {
    return true;
}

export function NamespacesOverviewStorageStatsFromJSON(json: any): NamespacesOverviewStorageStats {
    return NamespacesOverviewStorageStatsFromJSONTyped(json, false);
}

export function NamespacesOverviewStorageStatsFromJSONTyped(json: any, ignoreDiscriminator: boolean): NamespacesOverviewStorageStats {
    if (json == null) {
        return json;
    }
    return {
        
        'totalStorageUsed': json['totalStorageUsed'] == null ? undefined : json['totalStorageUsed'],
        'averageStoragePerNamespace': json['averageStoragePerNamespace'] == null ? undefined : json['averageStoragePerNamespace'],
        'maxStorageUsed': json['maxStorageUsed'] == null ? undefined : json['maxStorageUsed'],
    };
}

export function NamespacesOverviewStorageStatsToJSON(json: any): NamespacesOverviewStorageStats {
    return NamespacesOverviewStorageStatsToJSONTyped(json, false);
}

export function NamespacesOverviewStorageStatsToJSONTyped(value?: NamespacesOverviewStorageStats | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'totalStorageUsed': value['totalStorageUsed'],
        'averageStoragePerNamespace': value['averageStoragePerNamespace'],
        'maxStorageUsed': value['maxStorageUsed'],
    };
}

