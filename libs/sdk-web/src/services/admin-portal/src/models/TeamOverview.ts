/* tslint:disable */
/* eslint-disable */
/**
 * Admin Portal Aggregator API
 * Read-only aggregator API for admin dashboard widgets and KPIs
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api-support@aivo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TeamOverviewTopUsersInner } from './TeamOverviewTopUsersInner';
import {
    TeamOverviewTopUsersInnerFromJSON,
    TeamOverviewTopUsersInnerFromJSONTyped,
    TeamOverviewTopUsersInnerToJSON,
    TeamOverviewTopUsersInnerToJSONTyped,
} from './TeamOverviewTopUsersInner';
import type { TeamOverviewPendingInvites } from './TeamOverviewPendingInvites';
import {
    TeamOverviewPendingInvitesFromJSON,
    TeamOverviewPendingInvitesFromJSONTyped,
    TeamOverviewPendingInvitesToJSON,
    TeamOverviewPendingInvitesToJSONTyped,
} from './TeamOverviewPendingInvites';
import type { TeamOverviewRecentActivity } from './TeamOverviewRecentActivity';
import {
    TeamOverviewRecentActivityFromJSON,
    TeamOverviewRecentActivityFromJSONTyped,
    TeamOverviewRecentActivityToJSON,
    TeamOverviewRecentActivityToJSONTyped,
} from './TeamOverviewRecentActivity';
import type { TeamOverviewUsersByRole } from './TeamOverviewUsersByRole';
import {
    TeamOverviewUsersByRoleFromJSON,
    TeamOverviewUsersByRoleFromJSONTyped,
    TeamOverviewUsersByRoleToJSON,
    TeamOverviewUsersByRoleToJSONTyped,
} from './TeamOverviewUsersByRole';

/**
 * 
 * @export
 * @interface TeamOverview
 */
export interface TeamOverview {
    /**
     * 
     * @type {string}
     * @memberof TeamOverview
     */
    tenantId: string;
    /**
     * 
     * @type {TeamOverviewUsersByRole}
     * @memberof TeamOverview
     */
    usersByRole: TeamOverviewUsersByRole;
    /**
     * 
     * @type {TeamOverviewPendingInvites}
     * @memberof TeamOverview
     */
    pendingInvites: TeamOverviewPendingInvites;
    /**
     * 
     * @type {TeamOverviewRecentActivity}
     * @memberof TeamOverview
     */
    recentActivity: TeamOverviewRecentActivity;
    /**
     * Most active users in the tenant
     * @type {Array<TeamOverviewTopUsersInner>}
     * @memberof TeamOverview
     */
    topUsers?: Array<TeamOverviewTopUsersInner>;
    /**
     * 
     * @type {Date}
     * @memberof TeamOverview
     */
    lastUpdated: Date;
}

/**
 * Check if a given object implements the TeamOverview interface.
 */
export function instanceOfTeamOverview(value: object): value is TeamOverview {
    if (!('tenantId' in value) || value['tenantId'] === undefined) return false;
    if (!('usersByRole' in value) || value['usersByRole'] === undefined) return false;
    if (!('pendingInvites' in value) || value['pendingInvites'] === undefined) return false;
    if (!('recentActivity' in value) || value['recentActivity'] === undefined) return false;
    if (!('lastUpdated' in value) || value['lastUpdated'] === undefined) return false;
    return true;
}

export function TeamOverviewFromJSON(json: any): TeamOverview {
    return TeamOverviewFromJSONTyped(json, false);
}

export function TeamOverviewFromJSONTyped(json: any, ignoreDiscriminator: boolean): TeamOverview {
    if (json == null) {
        return json;
    }
    return {
        
        'tenantId': json['tenantId'],
        'usersByRole': TeamOverviewUsersByRoleFromJSON(json['usersByRole']),
        'pendingInvites': TeamOverviewPendingInvitesFromJSON(json['pendingInvites']),
        'recentActivity': TeamOverviewRecentActivityFromJSON(json['recentActivity']),
        'topUsers': json['topUsers'] == null ? undefined : ((json['topUsers'] as Array<any>).map(TeamOverviewTopUsersInnerFromJSON)),
        'lastUpdated': (new Date(json['lastUpdated'])),
    };
}

export function TeamOverviewToJSON(json: any): TeamOverview {
    return TeamOverviewToJSONTyped(json, false);
}

export function TeamOverviewToJSONTyped(value?: TeamOverview | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'tenantId': value['tenantId'],
        'usersByRole': TeamOverviewUsersByRoleToJSON(value['usersByRole']),
        'pendingInvites': TeamOverviewPendingInvitesToJSON(value['pendingInvites']),
        'recentActivity': TeamOverviewRecentActivityToJSON(value['recentActivity']),
        'topUsers': value['topUsers'] == null ? undefined : ((value['topUsers'] as Array<any>).map(TeamOverviewTopUsersInnerToJSON)),
        'lastUpdated': ((value['lastUpdated']).toISOString()),
    };
}

