/* tslint:disable */
/* eslint-disable */
/**
 * Admin Portal Aggregator API
 * Read-only aggregator API for admin dashboard widgets and KPIs
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api-support@aivo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface SubscriptionDetailsSeats
 */
export interface SubscriptionDetailsSeats {
    /**
     * Current number of seats
     * @type {number}
     * @memberof SubscriptionDetailsSeats
     */
    current: number;
    /**
     * Seats included in base plan
     * @type {number}
     * @memberof SubscriptionDetailsSeats
     */
    included: number;
    /**
     * Additional seats purchased
     * @type {number}
     * @memberof SubscriptionDetailsSeats
     */
    additional: number;
}

/**
 * Check if a given object implements the SubscriptionDetailsSeats interface.
 */
export function instanceOfSubscriptionDetailsSeats(value: object): value is SubscriptionDetailsSeats {
    if (!('current' in value) || value['current'] === undefined) return false;
    if (!('included' in value) || value['included'] === undefined) return false;
    if (!('additional' in value) || value['additional'] === undefined) return false;
    return true;
}

export function SubscriptionDetailsSeatsFromJSON(json: any): SubscriptionDetailsSeats {
    return SubscriptionDetailsSeatsFromJSONTyped(json, false);
}

export function SubscriptionDetailsSeatsFromJSONTyped(json: any, ignoreDiscriminator: boolean): SubscriptionDetailsSeats {
    if (json == null) {
        return json;
    }
    return {
        
        'current': json['current'],
        'included': json['included'],
        'additional': json['additional'],
    };
}

export function SubscriptionDetailsSeatsToJSON(json: any): SubscriptionDetailsSeats {
    return SubscriptionDetailsSeatsToJSONTyped(json, false);
}

export function SubscriptionDetailsSeatsToJSONTyped(value?: SubscriptionDetailsSeats | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'current': value['current'],
        'included': value['included'],
        'additional': value['additional'],
    };
}

