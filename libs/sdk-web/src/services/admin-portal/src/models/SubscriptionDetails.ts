/* tslint:disable */
/* eslint-disable */
/**
 * Admin Portal Aggregator API
 * Read-only aggregator API for admin dashboard widgets and KPIs
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api-support@aivo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { SubscriptionDetailsSeats } from './SubscriptionDetailsSeats';
import {
    SubscriptionDetailsSeatsFromJSON,
    SubscriptionDetailsSeatsFromJSONTyped,
    SubscriptionDetailsSeatsToJSON,
    SubscriptionDetailsSeatsToJSONTyped,
} from './SubscriptionDetailsSeats';
import type { SubscriptionDetailsTrialInfo } from './SubscriptionDetailsTrialInfo';
import {
    SubscriptionDetailsTrialInfoFromJSON,
    SubscriptionDetailsTrialInfoFromJSONTyped,
    SubscriptionDetailsTrialInfoToJSON,
    SubscriptionDetailsTrialInfoToJSONTyped,
} from './SubscriptionDetailsTrialInfo';
import type { SubscriptionDetailsRenewal } from './SubscriptionDetailsRenewal';
import {
    SubscriptionDetailsRenewalFromJSON,
    SubscriptionDetailsRenewalFromJSONTyped,
    SubscriptionDetailsRenewalToJSON,
    SubscriptionDetailsRenewalToJSONTyped,
} from './SubscriptionDetailsRenewal';
import type { SubscriptionDetailsPlan } from './SubscriptionDetailsPlan';
import {
    SubscriptionDetailsPlanFromJSON,
    SubscriptionDetailsPlanFromJSONTyped,
    SubscriptionDetailsPlanToJSON,
    SubscriptionDetailsPlanToJSONTyped,
} from './SubscriptionDetailsPlan';
import type { SubscriptionDetailsCouponsInner } from './SubscriptionDetailsCouponsInner';
import {
    SubscriptionDetailsCouponsInnerFromJSON,
    SubscriptionDetailsCouponsInnerFromJSONTyped,
    SubscriptionDetailsCouponsInnerToJSON,
    SubscriptionDetailsCouponsInnerToJSONTyped,
} from './SubscriptionDetailsCouponsInner';
import type { SubscriptionDetailsDiscountsInner } from './SubscriptionDetailsDiscountsInner';
import {
    SubscriptionDetailsDiscountsInnerFromJSON,
    SubscriptionDetailsDiscountsInnerFromJSONTyped,
    SubscriptionDetailsDiscountsInnerToJSON,
    SubscriptionDetailsDiscountsInnerToJSONTyped,
} from './SubscriptionDetailsDiscountsInner';

/**
 * 
 * @export
 * @interface SubscriptionDetails
 */
export interface SubscriptionDetails {
    /**
     * 
     * @type {string}
     * @memberof SubscriptionDetails
     */
    tenantId: string;
    /**
     * 
     * @type {SubscriptionDetailsPlan}
     * @memberof SubscriptionDetails
     */
    plan: SubscriptionDetailsPlan;
    /**
     * 
     * @type {SubscriptionDetailsSeats}
     * @memberof SubscriptionDetails
     */
    seats: SubscriptionDetailsSeats;
    /**
     * 
     * @type {SubscriptionDetailsRenewal}
     * @memberof SubscriptionDetails
     */
    renewal: SubscriptionDetailsRenewal;
    /**
     * 
     * @type {string}
     * @memberof SubscriptionDetails
     */
    status: SubscriptionDetailsStatusEnum;
    /**
     * 
     * @type {Array<SubscriptionDetailsCouponsInner>}
     * @memberof SubscriptionDetails
     */
    coupons?: Array<SubscriptionDetailsCouponsInner>;
    /**
     * 
     * @type {Array<SubscriptionDetailsDiscountsInner>}
     * @memberof SubscriptionDetails
     */
    discounts?: Array<SubscriptionDetailsDiscountsInner>;
    /**
     * 
     * @type {SubscriptionDetailsTrialInfo}
     * @memberof SubscriptionDetails
     */
    trialInfo?: SubscriptionDetailsTrialInfo;
    /**
     * 
     * @type {Date}
     * @memberof SubscriptionDetails
     */
    lastUpdated: Date;
}


/**
 * @export
 */
export const SubscriptionDetailsStatusEnum = {
    Active: 'active',
    PastDue: 'past_due',
    Canceled: 'canceled',
    Trialing: 'trialing'
} as const;
export type SubscriptionDetailsStatusEnum = typeof SubscriptionDetailsStatusEnum[keyof typeof SubscriptionDetailsStatusEnum];


/**
 * Check if a given object implements the SubscriptionDetails interface.
 */
export function instanceOfSubscriptionDetails(value: object): value is SubscriptionDetails {
    if (!('tenantId' in value) || value['tenantId'] === undefined) return false;
    if (!('plan' in value) || value['plan'] === undefined) return false;
    if (!('seats' in value) || value['seats'] === undefined) return false;
    if (!('renewal' in value) || value['renewal'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('lastUpdated' in value) || value['lastUpdated'] === undefined) return false;
    return true;
}

export function SubscriptionDetailsFromJSON(json: any): SubscriptionDetails {
    return SubscriptionDetailsFromJSONTyped(json, false);
}

export function SubscriptionDetailsFromJSONTyped(json: any, ignoreDiscriminator: boolean): SubscriptionDetails {
    if (json == null) {
        return json;
    }
    return {
        
        'tenantId': json['tenantId'],
        'plan': SubscriptionDetailsPlanFromJSON(json['plan']),
        'seats': SubscriptionDetailsSeatsFromJSON(json['seats']),
        'renewal': SubscriptionDetailsRenewalFromJSON(json['renewal']),
        'status': json['status'],
        'coupons': json['coupons'] == null ? undefined : ((json['coupons'] as Array<any>).map(SubscriptionDetailsCouponsInnerFromJSON)),
        'discounts': json['discounts'] == null ? undefined : ((json['discounts'] as Array<any>).map(SubscriptionDetailsDiscountsInnerFromJSON)),
        'trialInfo': json['trialInfo'] == null ? undefined : SubscriptionDetailsTrialInfoFromJSON(json['trialInfo']),
        'lastUpdated': (new Date(json['lastUpdated'])),
    };
}

export function SubscriptionDetailsToJSON(json: any): SubscriptionDetails {
    return SubscriptionDetailsToJSONTyped(json, false);
}

export function SubscriptionDetailsToJSONTyped(value?: SubscriptionDetails | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'tenantId': value['tenantId'],
        'plan': SubscriptionDetailsPlanToJSON(value['plan']),
        'seats': SubscriptionDetailsSeatsToJSON(value['seats']),
        'renewal': SubscriptionDetailsRenewalToJSON(value['renewal']),
        'status': value['status'],
        'coupons': value['coupons'] == null ? undefined : ((value['coupons'] as Array<any>).map(SubscriptionDetailsCouponsInnerToJSON)),
        'discounts': value['discounts'] == null ? undefined : ((value['discounts'] as Array<any>).map(SubscriptionDetailsDiscountsInnerToJSON)),
        'trialInfo': SubscriptionDetailsTrialInfoToJSON(value['trialInfo']),
        'lastUpdated': ((value['lastUpdated']).toISOString()),
    };
}

