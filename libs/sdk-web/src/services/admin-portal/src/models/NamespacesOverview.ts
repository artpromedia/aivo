/* tslint:disable */
/* eslint-disable */
/**
 * Admin Portal Aggregator API
 * Read-only aggregator API for admin dashboard widgets and KPIs
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api-support@aivo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { NamespacesOverviewTopNamespacesInner } from './NamespacesOverviewTopNamespacesInner';
import {
    NamespacesOverviewTopNamespacesInnerFromJSON,
    NamespacesOverviewTopNamespacesInnerFromJSONTyped,
    NamespacesOverviewTopNamespacesInnerToJSON,
    NamespacesOverviewTopNamespacesInnerToJSONTyped,
} from './NamespacesOverviewTopNamespacesInner';
import type { NamespacesOverviewRecentActivity } from './NamespacesOverviewRecentActivity';
import {
    NamespacesOverviewRecentActivityFromJSON,
    NamespacesOverviewRecentActivityFromJSONTyped,
    NamespacesOverviewRecentActivityToJSON,
    NamespacesOverviewRecentActivityToJSONTyped,
} from './NamespacesOverviewRecentActivity';
import type { NamespacesOverviewStatusCounts } from './NamespacesOverviewStatusCounts';
import {
    NamespacesOverviewStatusCountsFromJSON,
    NamespacesOverviewStatusCountsFromJSONTyped,
    NamespacesOverviewStatusCountsToJSON,
    NamespacesOverviewStatusCountsToJSONTyped,
} from './NamespacesOverviewStatusCounts';
import type { NamespacesOverviewStorageStats } from './NamespacesOverviewStorageStats';
import {
    NamespacesOverviewStorageStatsFromJSON,
    NamespacesOverviewStorageStatsFromJSONTyped,
    NamespacesOverviewStorageStatsToJSON,
    NamespacesOverviewStorageStatsToJSONTyped,
} from './NamespacesOverviewStorageStats';
import type { NamespacesOverviewHealthSummary } from './NamespacesOverviewHealthSummary';
import {
    NamespacesOverviewHealthSummaryFromJSON,
    NamespacesOverviewHealthSummaryFromJSONTyped,
    NamespacesOverviewHealthSummaryToJSON,
    NamespacesOverviewHealthSummaryToJSONTyped,
} from './NamespacesOverviewHealthSummary';

/**
 * 
 * @export
 * @interface NamespacesOverview
 */
export interface NamespacesOverview {
    /**
     * 
     * @type {string}
     * @memberof NamespacesOverview
     */
    tenantId: string;
    /**
     * Total number of learner private-brain namespaces
     * @type {number}
     * @memberof NamespacesOverview
     */
    totalNamespaces: number;
    /**
     * 
     * @type {NamespacesOverviewStatusCounts}
     * @memberof NamespacesOverview
     */
    statusCounts: NamespacesOverviewStatusCounts;
    /**
     * 
     * @type {NamespacesOverviewStorageStats}
     * @memberof NamespacesOverview
     */
    storageStats?: NamespacesOverviewStorageStats;
    /**
     * Most active or largest namespaces
     * @type {Array<NamespacesOverviewTopNamespacesInner>}
     * @memberof NamespacesOverview
     */
    topNamespaces: Array<NamespacesOverviewTopNamespacesInner>;
    /**
     * 
     * @type {NamespacesOverviewRecentActivity}
     * @memberof NamespacesOverview
     */
    recentActivity?: NamespacesOverviewRecentActivity;
    /**
     * 
     * @type {NamespacesOverviewHealthSummary}
     * @memberof NamespacesOverview
     */
    healthSummary?: NamespacesOverviewHealthSummary;
    /**
     * 
     * @type {Date}
     * @memberof NamespacesOverview
     */
    lastUpdated: Date;
}

/**
 * Check if a given object implements the NamespacesOverview interface.
 */
export function instanceOfNamespacesOverview(value: object): value is NamespacesOverview {
    if (!('tenantId' in value) || value['tenantId'] === undefined) return false;
    if (!('totalNamespaces' in value) || value['totalNamespaces'] === undefined) return false;
    if (!('statusCounts' in value) || value['statusCounts'] === undefined) return false;
    if (!('topNamespaces' in value) || value['topNamespaces'] === undefined) return false;
    if (!('lastUpdated' in value) || value['lastUpdated'] === undefined) return false;
    return true;
}

export function NamespacesOverviewFromJSON(json: any): NamespacesOverview {
    return NamespacesOverviewFromJSONTyped(json, false);
}

export function NamespacesOverviewFromJSONTyped(json: any, ignoreDiscriminator: boolean): NamespacesOverview {
    if (json == null) {
        return json;
    }
    return {
        
        'tenantId': json['tenantId'],
        'totalNamespaces': json['totalNamespaces'],
        'statusCounts': NamespacesOverviewStatusCountsFromJSON(json['statusCounts']),
        'storageStats': json['storageStats'] == null ? undefined : NamespacesOverviewStorageStatsFromJSON(json['storageStats']),
        'topNamespaces': ((json['topNamespaces'] as Array<any>).map(NamespacesOverviewTopNamespacesInnerFromJSON)),
        'recentActivity': json['recentActivity'] == null ? undefined : NamespacesOverviewRecentActivityFromJSON(json['recentActivity']),
        'healthSummary': json['healthSummary'] == null ? undefined : NamespacesOverviewHealthSummaryFromJSON(json['healthSummary']),
        'lastUpdated': (new Date(json['lastUpdated'])),
    };
}

export function NamespacesOverviewToJSON(json: any): NamespacesOverview {
    return NamespacesOverviewToJSONTyped(json, false);
}

export function NamespacesOverviewToJSONTyped(value?: NamespacesOverview | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'tenantId': value['tenantId'],
        'totalNamespaces': value['totalNamespaces'],
        'statusCounts': NamespacesOverviewStatusCountsToJSON(value['statusCounts']),
        'storageStats': NamespacesOverviewStorageStatsToJSON(value['storageStats']),
        'topNamespaces': ((value['topNamespaces'] as Array<any>).map(NamespacesOverviewTopNamespacesInnerToJSON)),
        'recentActivity': NamespacesOverviewRecentActivityToJSON(value['recentActivity']),
        'healthSummary': NamespacesOverviewHealthSummaryToJSON(value['healthSummary']),
        'lastUpdated': ((value['lastUpdated']).toISOString()),
    };
}

