/* tslint:disable */
/* eslint-disable */
/**
 * Learning Orchestrator API
 * Course orchestration and learning path management service
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api-support@aivo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AssessmentResultDetailedResultsInner } from './AssessmentResultDetailedResultsInner';
import {
    AssessmentResultDetailedResultsInnerFromJSON,
    AssessmentResultDetailedResultsInnerFromJSONTyped,
    AssessmentResultDetailedResultsInnerToJSON,
    AssessmentResultDetailedResultsInnerToJSONTyped,
} from './AssessmentResultDetailedResultsInner';

/**
 * 
 * @export
 * @interface AssessmentResult
 */
export interface AssessmentResult {
    /**
     * 
     * @type {string}
     * @memberof AssessmentResult
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof AssessmentResult
     */
    assessmentId: string;
    /**
     * 
     * @type {string}
     * @memberof AssessmentResult
     */
    learnerId: string;
    /**
     * 
     * @type {number}
     * @memberof AssessmentResult
     */
    score: number;
    /**
     * 
     * @type {number}
     * @memberof AssessmentResult
     */
    maxScore: number;
    /**
     * 
     * @type {number}
     * @memberof AssessmentResult
     */
    percentage?: number;
    /**
     * 
     * @type {boolean}
     * @memberof AssessmentResult
     */
    passed: boolean;
    /**
     * Time spent in minutes
     * @type {number}
     * @memberof AssessmentResult
     */
    timeSpent?: number;
    /**
     * 
     * @type {number}
     * @memberof AssessmentResult
     */
    attempt?: number;
    /**
     * 
     * @type {string}
     * @memberof AssessmentResult
     */
    feedback?: string;
    /**
     * 
     * @type {Array<AssessmentResultDetailedResultsInner>}
     * @memberof AssessmentResult
     */
    detailedResults?: Array<AssessmentResultDetailedResultsInner>;
    /**
     * 
     * @type {Date}
     * @memberof AssessmentResult
     */
    submittedAt: Date;
}

/**
 * Check if a given object implements the AssessmentResult interface.
 */
export function instanceOfAssessmentResult(value: object): value is AssessmentResult {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('assessmentId' in value) || value['assessmentId'] === undefined) return false;
    if (!('learnerId' in value) || value['learnerId'] === undefined) return false;
    if (!('score' in value) || value['score'] === undefined) return false;
    if (!('maxScore' in value) || value['maxScore'] === undefined) return false;
    if (!('passed' in value) || value['passed'] === undefined) return false;
    if (!('submittedAt' in value) || value['submittedAt'] === undefined) return false;
    return true;
}

export function AssessmentResultFromJSON(json: any): AssessmentResult {
    return AssessmentResultFromJSONTyped(json, false);
}

export function AssessmentResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): AssessmentResult {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'assessmentId': json['assessmentId'],
        'learnerId': json['learnerId'],
        'score': json['score'],
        'maxScore': json['maxScore'],
        'percentage': json['percentage'] == null ? undefined : json['percentage'],
        'passed': json['passed'],
        'timeSpent': json['timeSpent'] == null ? undefined : json['timeSpent'],
        'attempt': json['attempt'] == null ? undefined : json['attempt'],
        'feedback': json['feedback'] == null ? undefined : json['feedback'],
        'detailedResults': json['detailedResults'] == null ? undefined : ((json['detailedResults'] as Array<any>).map(AssessmentResultDetailedResultsInnerFromJSON)),
        'submittedAt': (new Date(json['submittedAt'])),
    };
}

export function AssessmentResultToJSON(json: any): AssessmentResult {
    return AssessmentResultToJSONTyped(json, false);
}

export function AssessmentResultToJSONTyped(value?: AssessmentResult | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'assessmentId': value['assessmentId'],
        'learnerId': value['learnerId'],
        'score': value['score'],
        'maxScore': value['maxScore'],
        'percentage': value['percentage'],
        'passed': value['passed'],
        'timeSpent': value['timeSpent'],
        'attempt': value['attempt'],
        'feedback': value['feedback'],
        'detailedResults': value['detailedResults'] == null ? undefined : ((value['detailedResults'] as Array<any>).map(AssessmentResultDetailedResultsInnerToJSON)),
        'submittedAt': ((value['submittedAt']).toISOString()),
    };
}

