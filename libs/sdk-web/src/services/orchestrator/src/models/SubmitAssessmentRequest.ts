/* tslint:disable */
/* eslint-disable */
/**
 * Learning Orchestrator API
 * Course orchestration and learning path management service
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api-support@aivo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { SubmitAssessmentRequestAnswersInner } from './SubmitAssessmentRequestAnswersInner';
import {
    SubmitAssessmentRequestAnswersInnerFromJSON,
    SubmitAssessmentRequestAnswersInnerFromJSONTyped,
    SubmitAssessmentRequestAnswersInnerToJSON,
    SubmitAssessmentRequestAnswersInnerToJSONTyped,
} from './SubmitAssessmentRequestAnswersInner';

/**
 * 
 * @export
 * @interface SubmitAssessmentRequest
 */
export interface SubmitAssessmentRequest {
    /**
     * 
     * @type {Array<SubmitAssessmentRequestAnswersInner>}
     * @memberof SubmitAssessmentRequest
     */
    answers: Array<SubmitAssessmentRequestAnswersInner>;
    /**
     * Time spent in minutes
     * @type {number}
     * @memberof SubmitAssessmentRequest
     */
    timeSpent?: number;
}

/**
 * Check if a given object implements the SubmitAssessmentRequest interface.
 */
export function instanceOfSubmitAssessmentRequest(value: object): value is SubmitAssessmentRequest {
    if (!('answers' in value) || value['answers'] === undefined) return false;
    return true;
}

export function SubmitAssessmentRequestFromJSON(json: any): SubmitAssessmentRequest {
    return SubmitAssessmentRequestFromJSONTyped(json, false);
}

export function SubmitAssessmentRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): SubmitAssessmentRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'answers': ((json['answers'] as Array<any>).map(SubmitAssessmentRequestAnswersInnerFromJSON)),
        'timeSpent': json['timeSpent'] == null ? undefined : json['timeSpent'],
    };
}

export function SubmitAssessmentRequestToJSON(json: any): SubmitAssessmentRequest {
    return SubmitAssessmentRequestToJSONTyped(json, false);
}

export function SubmitAssessmentRequestToJSONTyped(value?: SubmitAssessmentRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'answers': ((value['answers'] as Array<any>).map(SubmitAssessmentRequestAnswersInnerToJSON)),
        'timeSpent': value['timeSpent'],
    };
}

