/* tslint:disable */
/* eslint-disable */
/**
 * Learning Orchestrator API
 * Course orchestration and learning path management service
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api-support@aivo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ModuleResourcesInner } from './ModuleResourcesInner';
import {
    ModuleResourcesInnerFromJSON,
    ModuleResourcesInnerFromJSONTyped,
    ModuleResourcesInnerToJSON,
    ModuleResourcesInnerToJSONTyped,
} from './ModuleResourcesInner';

/**
 * 
 * @export
 * @interface Module
 */
export interface Module {
    /**
     * 
     * @type {string}
     * @memberof Module
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof Module
     */
    courseId: string;
    /**
     * 
     * @type {string}
     * @memberof Module
     */
    title: string;
    /**
     * 
     * @type {string}
     * @memberof Module
     */
    description?: string;
    /**
     * 
     * @type {string}
     * @memberof Module
     */
    type: ModuleTypeEnum;
    /**
     * 
     * @type {number}
     * @memberof Module
     */
    order: number;
    /**
     * Estimated duration in minutes
     * @type {number}
     * @memberof Module
     */
    estimatedDuration: number;
    /**
     * 
     * @type {string}
     * @memberof Module
     */
    contentUrl?: string;
    /**
     * 
     * @type {string}
     * @memberof Module
     */
    transcriptUrl?: string;
    /**
     * 
     * @type {Array<ModuleResourcesInner>}
     * @memberof Module
     */
    resources?: Array<ModuleResourcesInner>;
    /**
     * 
     * @type {boolean}
     * @memberof Module
     */
    isOptional?: boolean;
    /**
     * 
     * @type {Array<string>}
     * @memberof Module
     */
    prerequisites?: Array<string>;
    /**
     * 
     * @type {{ [key: string]: any; }}
     * @memberof Module
     */
    metadata?: { [key: string]: any; };
    /**
     * 
     * @type {Date}
     * @memberof Module
     */
    createdAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof Module
     */
    updatedAt: Date;
}


/**
 * @export
 */
export const ModuleTypeEnum = {
    Video: 'video',
    Text: 'text',
    Interactive: 'interactive',
    Assignment: 'assignment',
    Quiz: 'quiz'
} as const;
export type ModuleTypeEnum = typeof ModuleTypeEnum[keyof typeof ModuleTypeEnum];


/**
 * Check if a given object implements the Module interface.
 */
export function instanceOfModule(value: object): value is Module {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('courseId' in value) || value['courseId'] === undefined) return false;
    if (!('title' in value) || value['title'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('order' in value) || value['order'] === undefined) return false;
    if (!('estimatedDuration' in value) || value['estimatedDuration'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined) return false;
    return true;
}

export function ModuleFromJSON(json: any): Module {
    return ModuleFromJSONTyped(json, false);
}

export function ModuleFromJSONTyped(json: any, ignoreDiscriminator: boolean): Module {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'courseId': json['courseId'],
        'title': json['title'],
        'description': json['description'] == null ? undefined : json['description'],
        'type': json['type'],
        'order': json['order'],
        'estimatedDuration': json['estimatedDuration'],
        'contentUrl': json['contentUrl'] == null ? undefined : json['contentUrl'],
        'transcriptUrl': json['transcriptUrl'] == null ? undefined : json['transcriptUrl'],
        'resources': json['resources'] == null ? undefined : ((json['resources'] as Array<any>).map(ModuleResourcesInnerFromJSON)),
        'isOptional': json['isOptional'] == null ? undefined : json['isOptional'],
        'prerequisites': json['prerequisites'] == null ? undefined : json['prerequisites'],
        'metadata': json['metadata'] == null ? undefined : json['metadata'],
        'createdAt': (new Date(json['createdAt'])),
        'updatedAt': (new Date(json['updatedAt'])),
    };
}

export function ModuleToJSON(json: any): Module {
    return ModuleToJSONTyped(json, false);
}

export function ModuleToJSONTyped(value?: Module | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'courseId': value['courseId'],
        'title': value['title'],
        'description': value['description'],
        'type': value['type'],
        'order': value['order'],
        'estimatedDuration': value['estimatedDuration'],
        'contentUrl': value['contentUrl'],
        'transcriptUrl': value['transcriptUrl'],
        'resources': value['resources'] == null ? undefined : ((value['resources'] as Array<any>).map(ModuleResourcesInnerToJSON)),
        'isOptional': value['isOptional'],
        'prerequisites': value['prerequisites'],
        'metadata': value['metadata'],
        'createdAt': ((value['createdAt']).toISOString()),
        'updatedAt': ((value['updatedAt']).toISOString()),
    };
}

