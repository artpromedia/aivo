/* tslint:disable */
/* eslint-disable */
/**
 * Learning Orchestrator API
 * Course orchestration and learning path management service
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api-support@aivo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CreateLearningPathRequestCoursesInner } from './CreateLearningPathRequestCoursesInner';
import {
    CreateLearningPathRequestCoursesInnerFromJSON,
    CreateLearningPathRequestCoursesInnerFromJSONTyped,
    CreateLearningPathRequestCoursesInnerToJSON,
    CreateLearningPathRequestCoursesInnerToJSONTyped,
} from './CreateLearningPathRequestCoursesInner';

/**
 * 
 * @export
 * @interface CreateLearningPathRequest
 */
export interface CreateLearningPathRequest {
    /**
     * 
     * @type {string}
     * @memberof CreateLearningPathRequest
     */
    title: string;
    /**
     * 
     * @type {string}
     * @memberof CreateLearningPathRequest
     */
    description: string;
    /**
     * 
     * @type {string}
     * @memberof CreateLearningPathRequest
     */
    category: string;
    /**
     * 
     * @type {string}
     * @memberof CreateLearningPathRequest
     */
    difficulty?: CreateLearningPathRequestDifficultyEnum;
    /**
     * 
     * @type {string}
     * @memberof CreateLearningPathRequest
     */
    thumbnailUrl?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof CreateLearningPathRequest
     */
    tags?: Array<string>;
    /**
     * 
     * @type {Array<CreateLearningPathRequestCoursesInner>}
     * @memberof CreateLearningPathRequest
     */
    courses: Array<CreateLearningPathRequestCoursesInner>;
}


/**
 * @export
 */
export const CreateLearningPathRequestDifficultyEnum = {
    Beginner: 'beginner',
    Intermediate: 'intermediate',
    Advanced: 'advanced'
} as const;
export type CreateLearningPathRequestDifficultyEnum = typeof CreateLearningPathRequestDifficultyEnum[keyof typeof CreateLearningPathRequestDifficultyEnum];


/**
 * Check if a given object implements the CreateLearningPathRequest interface.
 */
export function instanceOfCreateLearningPathRequest(value: object): value is CreateLearningPathRequest {
    if (!('title' in value) || value['title'] === undefined) return false;
    if (!('description' in value) || value['description'] === undefined) return false;
    if (!('category' in value) || value['category'] === undefined) return false;
    if (!('courses' in value) || value['courses'] === undefined) return false;
    return true;
}

export function CreateLearningPathRequestFromJSON(json: any): CreateLearningPathRequest {
    return CreateLearningPathRequestFromJSONTyped(json, false);
}

export function CreateLearningPathRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateLearningPathRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'title': json['title'],
        'description': json['description'],
        'category': json['category'],
        'difficulty': json['difficulty'] == null ? undefined : json['difficulty'],
        'thumbnailUrl': json['thumbnailUrl'] == null ? undefined : json['thumbnailUrl'],
        'tags': json['tags'] == null ? undefined : json['tags'],
        'courses': ((json['courses'] as Array<any>).map(CreateLearningPathRequestCoursesInnerFromJSON)),
    };
}

export function CreateLearningPathRequestToJSON(json: any): CreateLearningPathRequest {
    return CreateLearningPathRequestToJSONTyped(json, false);
}

export function CreateLearningPathRequestToJSONTyped(value?: CreateLearningPathRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'title': value['title'],
        'description': value['description'],
        'category': value['category'],
        'difficulty': value['difficulty'],
        'thumbnailUrl': value['thumbnailUrl'],
        'tags': value['tags'],
        'courses': ((value['courses'] as Array<any>).map(CreateLearningPathRequestCoursesInnerToJSON)),
    };
}

