/* tslint:disable */
/* eslint-disable */
/**
 * Payments & Billing API
 * Subscription billing and payment processing service
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api-support@aivo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Discount
 */
export interface Discount {
    /**
     * 
     * @type {string}
     * @memberof Discount
     */
    couponId?: string;
    /**
     * 
     * @type {string}
     * @memberof Discount
     */
    couponCode?: string;
    /**
     * 
     * @type {string}
     * @memberof Discount
     */
    discountType?: DiscountDiscountTypeEnum;
    /**
     * 
     * @type {number}
     * @memberof Discount
     */
    discountValue?: number;
}


/**
 * @export
 */
export const DiscountDiscountTypeEnum = {
    Percent: 'percent',
    Amount: 'amount'
} as const;
export type DiscountDiscountTypeEnum = typeof DiscountDiscountTypeEnum[keyof typeof DiscountDiscountTypeEnum];


/**
 * Check if a given object implements the Discount interface.
 */
export function instanceOfDiscount(value: object): value is Discount {
    return true;
}

export function DiscountFromJSON(json: any): Discount {
    return DiscountFromJSONTyped(json, false);
}

export function DiscountFromJSONTyped(json: any, ignoreDiscriminator: boolean): Discount {
    if (json == null) {
        return json;
    }
    return {
        
        'couponId': json['couponId'] == null ? undefined : json['couponId'],
        'couponCode': json['couponCode'] == null ? undefined : json['couponCode'],
        'discountType': json['discountType'] == null ? undefined : json['discountType'],
        'discountValue': json['discountValue'] == null ? undefined : json['discountValue'],
    };
}

export function DiscountToJSON(json: any): Discount {
    return DiscountToJSONTyped(json, false);
}

export function DiscountToJSONTyped(value?: Discount | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'couponId': value['couponId'],
        'couponCode': value['couponCode'],
        'discountType': value['discountType'],
        'discountValue': value['discountValue'],
    };
}

