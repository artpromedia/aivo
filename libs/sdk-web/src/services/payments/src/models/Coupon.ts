/* tslint:disable */
/* eslint-disable */
/**
 * Payments & Billing API
 * Subscription billing and payment processing service
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api-support@aivo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Coupon
 */
export interface Coupon {
    /**
     * 
     * @type {string}
     * @memberof Coupon
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof Coupon
     */
    code: string;
    /**
     * 
     * @type {string}
     * @memberof Coupon
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof Coupon
     */
    discountType: CouponDiscountTypeEnum;
    /**
     * 
     * @type {number}
     * @memberof Coupon
     */
    discountValue: number;
    /**
     * 
     * @type {number}
     * @memberof Coupon
     */
    maxRedemptions?: number;
    /**
     * 
     * @type {number}
     * @memberof Coupon
     */
    redemptions?: number;
    /**
     * 
     * @type {Date}
     * @memberof Coupon
     */
    validFrom?: Date;
    /**
     * 
     * @type {Date}
     * @memberof Coupon
     */
    validUntil?: Date;
    /**
     * 
     * @type {boolean}
     * @memberof Coupon
     */
    active: boolean;
    /**
     * 
     * @type {Date}
     * @memberof Coupon
     */
    createdAt: Date;
}


/**
 * @export
 */
export const CouponDiscountTypeEnum = {
    Percent: 'percent',
    Amount: 'amount'
} as const;
export type CouponDiscountTypeEnum = typeof CouponDiscountTypeEnum[keyof typeof CouponDiscountTypeEnum];


/**
 * Check if a given object implements the Coupon interface.
 */
export function instanceOfCoupon(value: object): value is Coupon {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('code' in value) || value['code'] === undefined) return false;
    if (!('discountType' in value) || value['discountType'] === undefined) return false;
    if (!('discountValue' in value) || value['discountValue'] === undefined) return false;
    if (!('active' in value) || value['active'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    return true;
}

export function CouponFromJSON(json: any): Coupon {
    return CouponFromJSONTyped(json, false);
}

export function CouponFromJSONTyped(json: any, ignoreDiscriminator: boolean): Coupon {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'code': json['code'],
        'name': json['name'] == null ? undefined : json['name'],
        'discountType': json['discountType'],
        'discountValue': json['discountValue'],
        'maxRedemptions': json['maxRedemptions'] == null ? undefined : json['maxRedemptions'],
        'redemptions': json['redemptions'] == null ? undefined : json['redemptions'],
        'validFrom': json['validFrom'] == null ? undefined : (new Date(json['validFrom'])),
        'validUntil': json['validUntil'] == null ? undefined : (new Date(json['validUntil'])),
        'active': json['active'],
        'createdAt': (new Date(json['createdAt'])),
    };
}

export function CouponToJSON(json: any): Coupon {
    return CouponToJSONTyped(json, false);
}

export function CouponToJSONTyped(value?: Coupon | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'code': value['code'],
        'name': value['name'],
        'discountType': value['discountType'],
        'discountValue': value['discountValue'],
        'maxRedemptions': value['maxRedemptions'],
        'redemptions': value['redemptions'],
        'validFrom': value['validFrom'] == null ? undefined : ((value['validFrom']).toISOString()),
        'validUntil': value['validUntil'] == null ? undefined : ((value['validUntil']).toISOString()),
        'active': value['active'],
        'createdAt': ((value['createdAt']).toISOString()),
    };
}

