[tool.poetry]
name = "i18n-svc"
version = "1.0.0"
description = "Internationalization service with accessibility compliance"
authors = ["Accessibility Lead <accessibility@district.edu>"]
readme = "README.md"
packages = [{include = "app"}]

[tool.poetry.dependencies]
python = "^3.11"
fastapi = ">=0.104.0"
uvicorn = {extras = ["standard"], version = "^0.24.0"}
babel = "^2.13.0"
flufl-i18n = "^4.1.1"
polib = "^1.2.0"
langdetect = "^1.0.9"
pydantic = {extras = ["email"], version = "^2.5.0"}
sqlalchemy = {extras = ["asyncio"], version = "^2.0.0"}
asyncpg = "^0.29.0"
redis = "^5.0.0"
celery = "^5.3.0"
aiofiles = "^23.2.1"
jinja2 = "^3.1.2"
python-multipart = "^0.0.6"
httpx = "^0.25.0"
pycountry = "^23.12.11"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
pytest-asyncio = "^0.21.0"
pytest-cov = "^4.1.0"
black = "^23.0.0"
ruff = "^0.1.0"
mypy = "^1.6.0"
pre-commit = "^3.5.0"

[tool.poetry.group.accessibility.dependencies]
axe-core = "^4.8.0"
playwright = "^1.40.0"
pa11y = "^8.0.0"
lighthouse = "^11.4.0"

[tool.poetry.scripts]
extract-strings = "app.cli.extract:main"
update-locales = "app.cli.locales:main"
validate-accessibility = "app.cli.a11y:main"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
target-version = "py311"
line-length = 88

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = ["E501", "B008", "W191"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.black]
line-length = 88
target-version = ["py311"]
include = '\.pyi?$'

[tool.mypy]
python_version = "3.11"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
show_error_codes = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["app"]
omit = ["*/tests/*", "*/test_*.py"]
