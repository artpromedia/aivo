[tool.poetry]
name = "event-collector-svc"
version = "0.1.0"
description = "Event Collector Service for ingesting learner events via HTTP and gRPC to Redpanda"
authors = ["Aivo Team <dev@aivo.com>"]
packages = [{include = "app"}]

[tool.poetry.dependencies]
python = "^3.11"
# Web framework
fastapi = "^0.104.1"
uvicorn = {extras = ["standard"], version = "^0.24.0"}
# Data validation
pydantic = "^2.5.0"
pydantic-settings = "^2.1.0"
# Kafka/Redpanda
kafka-python = "^2.0.2"
aiokafka = "^0.9.0"
# gRPC
grpcio = "^1.59.0"
grpcio-tools = "^1.59.0"
protobuf = "^4.25.0"
# HTTP client
httpx = "^0.25.2"
# Compression
gzip-stream = "^1.4.0"
# Async utilities
asyncio-mqtt = "^0.13.0"
# Monitoring and health
prometheus-client = "^0.19.0"
# Environment and config
python-dotenv = "^1.1.0"
# Logging and observability
structlog = "^23.2.0"
# File handling and persistence
aiofiles = "^23.2.0"
# Time utilities
pendulum = "^2.1.2"
# JSON handling
orjson = "^3.9.0"
# Background tasks
celery = "^5.3.0"
redis = "^5.0.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.3"
pytest-asyncio = "^0.21.1"
pytest-cov = "^4.1.0"
pytest-mock = "^3.12.0"
black = "^23.11.0"
ruff = "^0.1.6"
mypy = "^1.7.0"
grpcio-status = "^1.59.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
target-version = "py311"
line-length = 79

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.black]
target-version = ['py311']
line-length = 79

[tool.mypy]
python_version = "3.11"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"
asyncio_mode = "auto"
