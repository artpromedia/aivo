[tool.poetry]
name = "coursework-ingest-svc"
version = "0.1.0"
description = "Coursework Ingest Service with OCR, topic extraction, and content moderation"
authors = ["Aivo Team <dev@aivo.com>"]
packages = [{include = "app"}]

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.104.1"
uvicorn = {extras = ["standard"], version = "^0.24.0"}
pydantic = "^2.5.0"
pydantic-settings = "^2.1.0"
sqlalchemy = "^2.0.23"
alembic = "^1.13.0"
asyncpg = "^0.30.0"
aiosqlite = "^0.20.0"
boto3 = "^1.34.0"
botocore = "^1.34.0"
httpx = "^0.25.2"
python-multipart = "^0.0.6"
python-jose = "^3.5.0"
passlib = "^1.7.4"
python-dotenv = "^1.1.0"
# OCR and ML dependencies
pytesseract = "^0.3.10"
Pillow = "^10.1.0"
pdf2image = "^1.16.3"
opencv-python = "^4.8.1"
numpy = "^1.24.3"
# AI/ML for topic extraction
openai = "^1.3.0"
transformers = "^4.35.0"
torch = "^2.1.0"
# Content moderation
presidio-analyzer = "^2.2.33"
presidio-anonymizer = "^2.2.33"
spacy = "^3.7.0"
# Async processing
celery = "^5.3.0"
redis = "^5.0.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.3"
pytest-asyncio = "^0.21.1"
pytest-cov = "^4.1.0"
pytest-mock = "^3.12.0"
black = "^23.11.0"
ruff = "^0.1.6"
mypy = "^1.7.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
target-version = "py311"
line-length = 79
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.black]
target-version = ['py311']
line-length = 79

[tool.mypy]
python_version = "3.11"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"
asyncio_mode = "auto"
