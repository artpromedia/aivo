[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "ink-svc"
version = "0.1.0"
description = "Digital ink capture service for stylus and finger input"
authors = ["Platform Team <platform@example.com>"]
packages = [{include = "app"}]

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "0.111.*"
uvicorn = "0.30.*"
sqlalchemy = "^2.0.31"
alembic = "^1.13.2"
asyncpg = "^0.29.0"
pydantic = "^2.8.2"
pydantic-settings = "^2.4.0"
boto3 = "^1.34.145"
structlog = "^24.2.0"
python-multipart = "^0.0.9"

[tool.poetry.group.dev.dependencies]
ruff = "^0.6.0"
mypy = "^1.11.0"
pytest = "^8.3.0"
pytest-asyncio = "^0.23.0"
httpx = "^0.24.0"
boto3-stubs = "^1.34.145"
types-boto3 = "^1.0.2"

[tool.ruff]
line-length = 100
target-version = "py311"

[tool.ruff.lint]
select = ["E", "F", "I", "N", "UP", "ANN"]
ignore = [
    "E501",  # line too long, handled by formatter
    "ANN401",  # Dynamically typed expressions (Any) - common in FastAPI
    "N802",  # Invalid function name - common for FastAPI endpoints
    "N803",  # Invalid argument name - common for FastAPI path params
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"test_*.py" = ["ANN001", "ANN201", "ANN202", "ANN204", "E741"]
"tests/*.py" = ["ANN001", "ANN201", "ANN202", "ANN204", "E741"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.mypy]
python_version = "3.11"
strict = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true
disallow_any_generics = true
disallow_untyped_defs = true
no_implicit_optional = true
show_error_codes = true

[[tool.mypy.overrides]]
module = ["tests.*"]
ignore_errors = true

[[tool.mypy.overrides]]
module = ["boto3.*", "botocore.*"]
ignore_missing_imports = true
