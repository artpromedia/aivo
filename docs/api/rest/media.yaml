openapi: 3.0.3
info:
  title: Media Service API
  description: |
    Media Service for video uploads, HLS transcoding, and Zoom LTI integration.
    
    ## Features
    - **Video Upload**: Presigned S3 uploads for large video files
    - **HLS Transcoding**: Automatic conversion to adaptive bitrate streaming
    - **Access Control**: Token-based playlist and segment proxy
    - **Zoom LTI Integration**: LTI 1.3 compliant live session management
    - **Attendance Tracking**: Real-time attendance via Zoom webhooks
    
    ## Authentication
    - HLS content requires access tokens
    - LTI launches use JWT verification
    - Zoom webhooks use HMAC signature validation
    
  version: 1.0.0
  contact:
    name: Media Service Team
    email: media-team@example.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: https://api.example.com
    description: Production server
  - url: https://staging-api.example.com
    description: Staging server
  - url: http://localhost:8000
    description: Development server

tags:
  - name: Media Upload
    description: Video file upload and management
  - name: HLS Playback
    description: Adaptive streaming playback with access control
  - name: LTI Integration
    description: Learning Tools Interoperability integration
  - name: Live Sessions
    description: Zoom meeting and attendance management
  - name: Webhooks
    description: External service webhooks
  - name: Health
    description: Service health monitoring

paths:
  /api/v1/media/presigned-upload:
    post:
      tags: [Media Upload]
      summary: Generate presigned upload URL
      description: Generate a presigned S3 URL for direct video upload
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [filename, content_type, file_size]
              properties:
                filename:
                  type: string
                  description: Original filename
                  example: "lecture-01.mp4"
                content_type:
                  type: string
                  enum: ["video/mp4", "video/webm", "video/quicktime", "video/x-msvideo"]
                  description: MIME type of video file
                  example: "video/mp4"
                file_size:
                  type: integer
                  description: File size in bytes
                  minimum: 1
                  maximum: 5368709120  # 5GB
                  example: 104857600
      responses:
        "200":
          description: Presigned upload URL generated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PresignedUploadResponse"
        "400":
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /api/v1/media/uploads/{upload_id}/complete:
    post:
      tags: [Media Upload]
      summary: Complete upload and start transcoding
      description: Mark upload as complete and trigger HLS transcoding
      parameters:
        - name: upload_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Upload UUID
      responses:
        "200":
          description: Upload completed and transcoding started
          content:
            application/json:
              schema:
                type: object
                properties:
                  upload_id:
                    type: string
                    format: uuid
                  status:
                    type: string
                    enum: [uploaded]
                  transcoding_task_id:
                    type: string
                    description: Celery task ID for transcoding
        "404":
          description: Upload not found
        "500":
          description: Internal server error

  /api/v1/media/uploads:
    get:
      tags: [Media Upload]
      summary: List uploads
      description: List all video uploads with optional filtering
      parameters:
        - name: status
          in: query
          schema:
            type: string
            enum: [pending, uploaded, transcoding, completed, failed]
          description: Filter by upload status
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 50
          description: Maximum number of results
        - name: offset
          in: query
          schema:
            type: integer
            minimum: 0
            default: 0
          description: Number of results to skip
      responses:
        "200":
          description: List of uploads
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/MediaUploadResponse"

  /api/v1/media/uploads/{upload_id}:
    get:
      tags: [Media Upload]
      summary: Get upload details
      description: Get detailed information about a specific upload
      parameters:
        - name: upload_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Upload details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MediaUploadResponse"
        "404":
          description: Upload not found

  /api/v1/media/hls/{video_id}/access-token:
    get:
      tags: [HLS Playback]
      summary: Generate HLS access token
      description: Generate signed access token for HLS content viewing
      parameters:
        - name: video_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: user_id
          in: query
          required: true
          schema:
            type: string
            format: uuid
        - name: expires_in
          in: query
          schema:
            type: integer
            default: 3600
            minimum: 300
            maximum: 86400
          description: Token expiration in seconds
      responses:
        "200":
          description: Access token generated
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                    description: Signed access token
                  video_id:
                    type: string
                    format: uuid
                  expires_in:
                    type: integer

  /api/v1/media/hls/{video_id}/master.m3u8:
    get:
      tags: [HLS Playback]
      summary: Get master playlist
      description: Proxy master HLS playlist with access control
      parameters:
        - name: video_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: token
          in: query
          required: true
          schema:
            type: string
          description: Access token from /access-token endpoint
      responses:
        "200":
          description: Master playlist
          content:
            application/vnd.apple.mpegurl:
              schema:
                type: string
                example: |
                  #EXTM3U
                  #EXT-X-VERSION:6
                  #EXT-X-STREAM-INF:BANDWIDTH=800000,RESOLUTION=640x360
                  360p.m3u8
                  #EXT-X-STREAM-INF:BANDWIDTH=1400000,RESOLUTION=854x480
                  480p.m3u8
                  #EXT-X-STREAM-INF:BANDWIDTH=2800000,RESOLUTION=1280x720
                  720p.m3u8
        "403":
          description: Access denied - invalid or expired token
        "404":
          description: Video not found

  /api/v1/lti/config:
    post:
      tags: [LTI Integration]
      summary: Create LTI configuration
      description: Create Zoom LTI 1.3 configuration for an organization
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ZoomLTIConfigCreate"
      responses:
        "200":
          description: LTI configuration created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ZoomLTIConfigResponse"
        "400":
          description: Invalid configuration data
        "500":
          description: Internal server error

  /api/v1/lti/launch:
    post:
      tags: [LTI Integration]
      summary: Handle LTI launch
      description: Process LTI 1.3 launch request and verify JWT token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LTILaunchRequest"
      responses:
        "200":
          description: LTI launch verified successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_id:
                    type: string
                    description: LTI user identifier
                  organization_id:
                    type: string
                    format: uuid
                  launch_verified:
                    type: boolean
                    enum: [true]
        "400":
          description: Invalid LTI launch request
        "404":
          description: LTI configuration not found

  /api/v1/live-sessions:
    post:
      tags: [Live Sessions]
      summary: Create live session
      description: Create a live session with Zoom meeting integration
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LiveSessionCreate"
      responses:
        "200":
          description: Live session created with Zoom meeting
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LiveSessionResponse"
        "400":
          description: Invalid session data
        "404":
          description: LTI configuration not found

  /api/v1/live-sessions/{session_id}/attendance:
    get:
      tags: [Live Sessions]
      summary: Get attendance report
      description: Generate detailed attendance report for a live session
      parameters:
        - name: session_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Attendance report
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AttendanceReport"
        "404":
          description: Session not found

  /api/v1/webhooks/zoom:
    post:
      tags: [Webhooks]
      summary: Zoom webhook handler
      description: Handle Zoom webhook events for attendance tracking
      security:
        - ZoomWebhookSignature: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                event:
                  type: string
                  enum: 
                    - meeting.started
                    - meeting.ended
                    - meeting.participant_joined
                    - meeting.participant_left
                payload:
                  type: object
                  properties:
                    object:
                      type: object
                      description: Meeting or participant data
      responses:
        "200":
          description: Webhook processed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum: [processed]
        "400":
          description: Invalid webhook signature or payload
        "500":
          description: Webhook processing failed

  /health:
    get:
      tags: [Health]
      summary: Health check
      description: Service health status
      responses:
        "200":
          description: Service is healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum: [healthy]
                  service:
                    type: string
                    enum: [media-service]

components:
  schemas:
    PresignedUploadResponse:
      type: object
      required: [upload_id, presigned_url, s3_key, expires_in]
      properties:
        upload_id:
          type: string
          format: uuid
          description: Unique upload identifier
        presigned_url:
          type: string
          format: uri
          description: S3 presigned URL for upload
        s3_key:
          type: string
          description: S3 object key
        expires_in:
          type: integer
          description: URL expiration in seconds

    MediaUploadResponse:
      type: object
      required: [id, filename, content_type, file_size, status, created_at]
      properties:
        id:
          type: string
          format: uuid
        filename:
          type: string
        content_type:
          type: string
        file_size:
          type: integer
        s3_key:
          type: string
        s3_bucket:
          type: string
        status:
          type: string
          enum: [pending, uploaded, transcoding, completed, failed]
        error_message:
          type: string
          nullable: true
        created_at:
          type: string
          format: date-time
        uploaded_at:
          type: string
          format: date-time
          nullable: true
        completed_at:
          type: string
          format: date-time
          nullable: true

    ZoomLTIConfigCreate:
      type: object
      required: [organization_id, client_id, issuer, key_set_url, deployment_id, zoom_api_key, zoom_api_secret]
      properties:
        organization_id:
          type: string
          format: uuid
        client_id:
          type: string
          description: LTI client ID
        issuer:
          type: string
          format: uri
          description: LTI platform issuer URL
        key_set_url:
          type: string
          format: uri
          description: Platform public key set URL
        deployment_id:
          type: string
          description: LTI deployment ID
        zoom_api_key:
          type: string
          description: Zoom API key
        zoom_api_secret:
          type: string
          description: Zoom API secret
        zoom_base_url:
          type: string
          format: uri
          default: "https://api.zoom.us/v2"
        zoom_webhook_secret:
          type: string
          nullable: true

    ZoomLTIConfigResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        organization_id:
          type: string
          format: uuid
        client_id:
          type: string
        issuer:
          type: string
        deployment_id:
          type: string
        zoom_base_url:
          type: string
        created_at:
          type: string
          format: date-time

    LTILaunchRequest:
      type: object
      required: [id_token, organization_id]
      properties:
        id_token:
          type: string
          description: JWT ID token from LTI platform
        organization_id:
          type: string
          format: uuid

    LiveSessionCreate:
      type: object
      required: [session_name, scheduled_start, scheduled_end, zoom_host_id, lti_config_id]
      properties:
        session_name:
          type: string
          maxLength: 255
        description:
          type: string
          nullable: true
        scheduled_start:
          type: string
          format: date-time
        scheduled_end:
          type: string
          format: date-time
        zoom_host_id:
          type: string
          description: Zoom user ID for meeting host
        lti_config_id:
          type: string
          format: uuid
        requires_registration:
          type: boolean
          default: false
        is_recorded:
          type: boolean
          default: false

    LiveSessionResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        session_name:
          type: string
        description:
          type: string
          nullable: true
        scheduled_start:
          type: string
          format: date-time
        scheduled_end:
          type: string
          format: date-time
        actual_start:
          type: string
          format: date-time
          nullable: true
        actual_end:
          type: string
          format: date-time
          nullable: true
        zoom_meeting_id:
          type: string
        zoom_join_url:
          type: string
          format: uri
        zoom_start_url:
          type: string
          format: uri
        zoom_password:
          type: string
          nullable: true
        status:
          type: string
          enum: [scheduled, started, ended, cancelled]
        created_at:
          type: string
          format: date-time

    AttendanceReport:
      type: object
      properties:
        session_id:
          type: string
          format: uuid
        session_name:
          type: string
        scheduled_start:
          type: string
          format: date-time
        scheduled_end:
          type: string
          format: date-time
        actual_start:
          type: string
          format: date-time
          nullable: true
        actual_end:
          type: string
          format: date-time
          nullable: true
        status:
          type: string
        total_participants:
          type: integer
        present_count:
          type: integer
        average_duration_minutes:
          type: number
        status_distribution:
          type: object
          additionalProperties:
            type: integer
        attendance_records:
          type: array
          items:
            $ref: "#/components/schemas/AttendanceRecord"

    AttendanceRecord:
      type: object
      properties:
        participant_name:
          type: string
        participant_email:
          type: string
          nullable: true
        joined_at:
          type: string
          format: date-time
        left_at:
          type: string
          format: date-time
          nullable: true
        duration_minutes:
          type: integer
          nullable: true
        attendance_status:
          type: string
          enum: [present, absent, late, left_early]

    ErrorResponse:
      type: object
      required: [detail]
      properties:
        detail:
          type: string
          description: Error message
        code:
          type: string
          description: Error code
          nullable: true

  securitySchemes:
    ZoomWebhookSignature:
      type: apiKey
      in: header
      name: authorization
      description: HMAC-SHA256 signature for Zoom webhook verification

externalDocs:
  description: Media Service Documentation
  url: https://docs.example.com/media-service
