openapi: 3.1.0
info:
  title: Learner Management API
  description: Learner profile and learning data management service
  version: 1.0.0
  contact:
    name: API Support
    email: api-support@aivo.com
servers:
- url: https://api.aivo.com/learner/v1
  description: Production server
- url: https://staging-api.aivo.com/learner/v1
  description: Staging server
paths:
  /learners:
    get:
      summary: List learners
      operationId: listLearners
      tags:
      - Learners
      security:
      - bearerAuth: []
      parameters:
      - name: tenantId
        in: query
        required: true
        schema:
          type: string
          format: uuid
        description: The tenantId query parameter
      - name: status
        in: query
        schema:
          type: string
          enum:
          - active
          - inactive
          - pending
          - suspended
        description: The status query parameter
      - name: search
        in: query
        schema:
          type: string
          description: Search by name or email
        description: The search query parameter
      - name: limit
        in: query
        schema:
          type: integer
          minimum: 1
          maximum: 100
          default: 20
        description: The limit query parameter
      - name: offset
        in: query
        schema:
          type: integer
          minimum: 0
          default: 0
        description: The offset query parameter
      responses:
        '200':
          description: Learners retrieved successfully
          content:
            application/json:
              schema:
                type: object
                required:
                - data
                - total
                - limit
                - offset
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Learner'
                  total:
                    type: integer
                    example: 500
                  limit:
                    type: integer
                    example: 20
                  offset:
                    type: integer
                    example: 0
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      description: Retrieve all Learners
    post:
      summary: Create new learner
      operationId: createLearner
      tags:
      - Learners
      security:
      - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateLearnerRequest'
      responses:
        '201':
          description: Learner created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Learner'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Learner already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
      description: Create a new Learner
  /learners/{learnerId}:
    get:
      summary: Get learner by ID
      operationId: getLearner
      tags:
      - Learners
      security:
      - bearerAuth: []
      parameters:
      - name: learnerId
        in: path
        required: true
        schema:
          type: string
          format: uuid
        description: The learnerId path parameter
      responses:
        '200':
          description: Learner retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Learner'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Learner not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      description: Retrieve a specific Learner
    put:
      summary: Update learner
      operationId: updateLearner
      tags:
      - Learners
      security:
      - bearerAuth: []
      parameters:
      - name: learnerId
        in: path
        required: true
        schema:
          type: string
          format: uuid
        description: The learnerId path parameter
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateLearnerRequest'
      responses:
        '200':
          description: Learner updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Learner'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Learner not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      description: Update a Learner
    delete:
      summary: Delete learner
      operationId: deleteLearner
      tags:
      - Learners
      security:
      - bearerAuth: []
      parameters:
      - name: learnerId
        in: path
        required: true
        schema:
          type: string
          format: uuid
        description: The learnerId path parameter
      responses:
        '204':
          description: Learner deleted successfully
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Learner not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      description: Delete a Learner
  /learners/{learnerId}/profile:
    get:
      summary: Get learner profile
      operationId: getLearnerProfile
      tags:
      - Learner Profile
      security:
      - bearerAuth: []
      parameters:
      - name: learnerId
        in: path
        required: true
        schema:
          type: string
          format: uuid
        description: The learnerId path parameter
      responses:
        '200':
          description: Learner profile retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LearnerProfile'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Learner not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      description: Retrieve a specific Profile
    put:
      summary: Update learner profile
      operationId: updateLearnerProfile
      tags:
      - Learner Profile
      security:
      - bearerAuth: []
      parameters:
      - name: learnerId
        in: path
        required: true
        schema:
          type: string
          format: uuid
        description: The learnerId path parameter
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateLearnerProfileRequest'
      responses:
        '200':
          description: Learner profile updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LearnerProfile'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Learner not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      description: Update a Profile
  /learners/{learnerId}/analytics:
    get:
      summary: Get learner analytics
      operationId: getLearnerAnalytics
      tags:
      - Analytics
      security:
      - bearerAuth: []
      parameters:
      - name: learnerId
        in: path
        required: true
        schema:
          type: string
          format: uuid
        description: The learnerId path parameter
      - name: range
        in: query
        schema:
          type: string
          enum:
          - 7d
          - 30d
          - 90d
          - 1y
          default: 30d
        description: The range query parameter
      responses:
        '200':
          description: Learner analytics retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LearnerAnalytics'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Learner not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      description: Retrieve a specific Analytic
  /learners/{learnerId}/achievements:
    get:
      summary: Get learner achievements
      operationId: getLearnerAchievements
      tags:
      - Achievements
      security:
      - bearerAuth: []
      parameters:
      - name: learnerId
        in: path
        required: true
        schema:
          type: string
          format: uuid
        description: The learnerId path parameter
      responses:
        '200':
          description: Learner achievements retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Achievement'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Learner not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      description: Retrieve a specific Achievement
    post:
      summary: Award achievement to learner
      operationId: awardAchievement
      tags:
      - Achievements
      security:
      - bearerAuth: []
      parameters:
      - name: learnerId
        in: path
        required: true
        schema:
          type: string
          format: uuid
        description: The learnerId path parameter
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AwardAchievementRequest'
      responses:
        '201':
          description: Achievement awarded successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Achievement'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Learner not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      description: Create a new Achievement
  /bulk-import:
    post:
      summary: Bulk import learners
      operationId: bulkImportLearners
      tags:
      - Bulk Operations
      security:
      - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkImportRequest'
      responses:
        '200':
          description: Bulk import completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkImportResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      description: Create a new Bulk Import
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Learner:
      type: object
      required:
      - id
      - tenantId
      - email
      - firstName
      - lastName
      - status
      - createdAt
      - updatedAt
      properties:
        id:
          type: string
          format: uuid
          example: 9ddeffbb-80f8-4937-826a-51418af5a7e7
        tenantId:
          type: string
          format: uuid
          example: 57dad1ac-6045-41d4-89d8-bf5f33ab253e
        email:
          type: string
          format: email
          example: user@example.com
        firstName:
          type: string
          example: Jane
        lastName:
          type: string
          example: Smith
        status:
          type: string
          enum:
          - active
          - inactive
          - pending
          - suspended
          example: active
        avatar:
          type: string
          format: uri
          nullable: true
          example: https://example.com
        timezone:
          type: string
          example: c22028a0-82d2-4d5c-b07a-15e9d4f1334d
        language:
          type: string
          example: en
        department:
          type: string
          nullable: true
          example: 3b65fa78-430c-4293-b248-124cefe7c060
        jobTitle:
          type: string
          nullable: true
          example: ca333caf-761d-4984-9782-fcb68253e59f
        manager:
          type: string
          format: uuid
          nullable: true
          example: 93d59a44-1888-4759-9b3e-ac2a92bbcdc6
        lastLoginAt:
          type: string
          format: date-time
          nullable: true
          example: '2025-09-13T00:14:43.069770+00:00'
        enrollmentCount:
          type: integer
          example: 5
        completionCount:
          type: integer
          example: 3
        totalLearningMinutes:
          type: integer
          example: 1250
        metadata:
          type: object
          additionalProperties: true
          example:
            employeeId: EMP001
            hireDate: '2022-01-15'
        createdAt:
          type: string
          format: date-time
          example: '2025-09-13T00:14:43.069770+00:00'
        updatedAt:
          type: string
          format: date-time
          example: '2025-09-13T00:14:43.069770+00:00'
    CreateLearnerRequest:
      type: object
      required:
      - tenantId
      - email
      - firstName
      - lastName
      properties:
        tenantId:
          type: string
          format: uuid
          example: 0d949bea-f11f-4e67-b811-b19401069a46
        email:
          type: string
          format: email
          example: user@example.com
        firstName:
          type: string
          minLength: 1
          maxLength: 50
          example: Jane
        lastName:
          type: string
          minLength: 1
          maxLength: 50
          example: Smith
        timezone:
          type: string
          example: 4dc1cdeb-7e06-411c-b53d-94237de77aa8
        language:
          type: string
          example: en
        department:
          type: string
          maxLength: 100
          example: 6a4a458d-d4ae-4b13-be5d-4b9abe39a235
        jobTitle:
          type: string
          maxLength: 100
          example: d746fdf7-ad44-4ed8-98b8-a66c7296857e
        manager:
          type: string
          format: uuid
          example: 2b8ef6b9-d651-4d50-a208-d2ed85c90eff
        metadata:
          type: object
          additionalProperties: true
    UpdateLearnerRequest:
      type: object
      properties:
        firstName:
          type: string
          minLength: 1
          maxLength: 50
          example: Jane
        lastName:
          type: string
          minLength: 1
          maxLength: 50
          example: Smith
        status:
          type: string
          enum:
          - active
          - inactive
          - pending
          - suspended
          example: active
        timezone:
          type: string
          example: 83e18795-6129-432a-abeb-e253534412d8
        language:
          type: string
          example: en
        department:
          type: string
          maxLength: 100
          example: 5711a228-d45b-4b61-b280-f532941e8dba
        jobTitle:
          type: string
          maxLength: 100
          example: 520d745c-832f-45ab-8033-26d752a9fada
        manager:
          type: string
          format: uuid
          example: d596f2aa-c2b9-40f8-a1fc-a65bd75d28e4
        metadata:
          type: object
          additionalProperties: true
    LearnerProfile:
      type: object
      required:
      - learnerId
      - preferences
      - skills
      - goals
      properties:
        learnerId:
          type: string
          format: uuid
          example: ed60010d-20a2-4be5-8804-2a7894ee4582
        bio:
          type: string
          maxLength: 500
          nullable: true
          example: 1d20ea79-5c15-4fe4-9a5b-c2b5c32a868a
        preferences:
          type: object
          properties:
            learningStyle:
              type: string
              enum:
              - visual
              - auditory
              - kinesthetic
              - reading
              example: visual
            difficultyLevel:
              type: string
              enum:
              - beginner
              - intermediate
              - advanced
              example: beginner
            notificationsEnabled:
              type: boolean
              default: true
            emailDigest:
              type: boolean
              default: true
            preferredLearningTime:
              type: string
              enum:
              - morning
              - afternoon
              - evening
              - night
              example: morning
        skills:
          type: array
          items:
            type: object
            properties:
              skillId:
                type: string
                format: uuid
              skillName:
                type: string
              level:
                type: string
                enum:
                - beginner
                - intermediate
                - advanced
                - expert
              verifiedAt:
                type: string
                format: date-time
                nullable: true
        goals:
          type: array
          items:
            type: object
            properties:
              goalId:
                type: string
                format: uuid
              title:
                type: string
              description:
                type: string
              targetDate:
                type: string
                format: date
              status:
                type: string
                enum:
                - active
                - completed
                - paused
                - canceled
              progress:
                type: number
                minimum: 0
                maximum: 100
        interests:
          type: array
          items:
            type: string
          example:
          - JavaScript
          - Machine Learning
          - Leadership
    UpdateLearnerProfileRequest:
      type: object
      properties:
        bio:
          type: string
          maxLength: 500
          example: 470bd712-49d7-438e-9e57-2136a4333165
        preferences:
          type: object
          properties:
            learningStyle:
              type: string
              enum:
              - visual
              - auditory
              - kinesthetic
              - reading
            difficultyLevel:
              type: string
              enum:
              - beginner
              - intermediate
              - advanced
            notificationsEnabled:
              type: boolean
            emailDigest:
              type: boolean
            preferredLearningTime:
              type: string
              enum:
              - morning
              - afternoon
              - evening
              - night
        interests:
          type: array
          items:
            type: string
    LearnerAnalytics:
      type: object
      required:
      - learnerId
      - range
      - totalLearningTime
      - completionRate
      - streakDays
      - activityData
      properties:
        learnerId:
          type: string
          format: uuid
          example: 5af56902-e5d7-490e-926c-de29464f70b6
        range:
          type: string
          example: 30d
        totalLearningTime:
          type: integer
          description: Total learning time in minutes
          example: 1250
        completionRate:
          type: number
          minimum: 0
          maximum: 100
          example: 75.5
        streakDays:
          type: integer
          example: 7
        coursesStarted:
          type: integer
          example: 5
        coursesCompleted:
          type: integer
          example: 3
        averageSessionLength:
          type: integer
          description: Average session length in minutes
          example: 45
        activityData:
          type: array
          items:
            type: object
            properties:
              date:
                type: string
                format: date
              minutesLearned:
                type: integer
              sessionsCount:
                type: integer
        subjectBreakdown:
          type: array
          items:
            type: object
            properties:
              subject:
                type: string
              minutesLearned:
                type: integer
              percentage:
                type: number
    Achievement:
      type: object
      required:
      - id
      - learnerId
      - type
      - title
      - description
      - earnedAt
      properties:
        id:
          type: string
          format: uuid
          example: a5b551f7-3922-4333-9ba1-a9a0aa4e390b
        learnerId:
          type: string
          format: uuid
          example: b87af91d-b63c-4ada-8851-09a8ade038df
        type:
          type: string
          enum:
          - course_completion
          - streak
          - skill_mastery
          - certification
          - milestone
          example: course_completion
        title:
          type: string
          example: 157c0a67-eb96-4d77-930d-b77c9702a1be
        description:
          type: string
          example: 8e292ed2-908a-491d-90ce-19fde16f3b9c
        iconUrl:
          type: string
          format: uri
          example: https://example.com
        badgeUrl:
          type: string
          format: uri
          example: https://example.com
        points:
          type: integer
          example: 100
        metadata:
          type: object
          additionalProperties: true
          example:
            courseId: course_123
            score: 95
        earnedAt:
          type: string
          format: date-time
          example: '2025-09-13T00:14:43.070813+00:00'
    AwardAchievementRequest:
      type: object
      required:
      - type
      - title
      - description
      properties:
        type:
          type: string
          enum:
          - course_completion
          - streak
          - skill_mastery
          - certification
          - milestone
          example: course_completion
        title:
          type: string
          example: 664b0a60-ebc8-44a4-ab6b-c126da43fc34
        description:
          type: string
          example: d36e9f96-3ad7-45d7-8c19-ab8f9b939d37
        iconUrl:
          type: string
          format: uri
          example: https://example.com
        badgeUrl:
          type: string
          format: uri
          example: https://example.com
        points:
          type: integer
          default: 0
          example: 100
        metadata:
          type: object
          additionalProperties: true
    BulkImportRequest:
      type: object
      required:
      - tenantId
      - learners
      properties:
        tenantId:
          type: string
          format: uuid
          example: a1fbfda2-d73b-4f0f-bb71-78b5a6990709
        learners:
          type: array
          items:
            $ref: '#/components/schemas/CreateLearnerRequest'
          minItems: 1
          maxItems: 1000
    BulkImportResponse:
      type: object
      required:
      - successful
      - failed
      - total
      properties:
        successful:
          type: integer
          example: 95
        failed:
          type: integer
          example: 5
        total:
          type: integer
          example: 100
        errors:
          type: array
          items:
            type: object
            properties:
              index:
                type: integer
              email:
                type: string
              error:
                type: string
              message:
                type: string
    Error:
      type: object
      required:
      - error
      - message
      properties:
        error:
          type: string
          example: 270ee73a-7196-4beb-adb2-a62e692516fe
        message:
          type: string
          example: a5e1c37d-4b9a-42e3-8493-ebc685d32dbe
        details:
          type: object
          additionalProperties: true
    ValidationError:
      type: object
      required:
      - error
      - message
      - validationErrors
      properties:
        error:
          type: string
          example: dcf1b0d0-15e7-42e4-a60c-5de62753e911
        message:
          type: string
          example: b90b9030-7ee8-41da-8fa8-34c2b5819b8c
        validationErrors:
          type: array
          items:
            type: object
            required:
            - field
            - message
            properties:
              field:
                type: string
                example: email
              message:
                type: string
                example: 5a825799-3a06-4bf2-a99e-7d16f63a7d6d
tags:
- name: Achievements
  description: Achievements operations
- name: Learners
  description: Learners operations
- name: Learner Profile
  description: Learner Profile operations
- name: Bulk Operations
  description: Bulk Operations operations
- name: Analytics
  description: Analytics operations
