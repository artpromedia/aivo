openapi: 3.1.0
info:
  title: Authentication Service API
  description: Core authentication and authorization service
  version: 1.0.0
  contact:
    name: API Support
    email: api-support@aivo.com
servers:
  - url: https://api.aivo.com/auth/v1
    description: Production server
  - url: https://staging-api.aivo.com/auth/v1
    description: Staging server
paths:
  /login:
    post:
      summary: Authenticate user
      operationId: login
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                  example: user@example.com
                password:
                  type: string
                  format: password
                  minLength: 8
                  example: "********"
      responses:
        '200':
          description: Authentication successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '401':
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'

  /refresh:
    post:
      summary: Refresh access token
      operationId: refreshToken
      tags:
        - Authentication
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - refreshToken
              properties:
                refreshToken:
                  type: string
                  example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
      responses:
        '200':
          description: Token refreshed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '401':
          description: Invalid refresh token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /logout:
    post:
      summary: Logout user
      operationId: logout
      tags:
        - Authentication
      security:
        - bearerAuth: []
      responses:
        '204':
          description: Logout successful
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /me:
    get:
      summary: Get current user profile
      operationId: getCurrentUser
      tags:
        - Profile
      security:
        - bearerAuth: []
      responses:
        '200':
          description: User profile retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    AuthResponse:
      type: object
      required:
        - accessToken
        - refreshToken
        - user
        - expiresIn
      properties:
        accessToken:
          type: string
          description: JWT access token
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        refreshToken:
          type: string
          description: JWT refresh token
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        user:
          $ref: '#/components/schemas/User'
        expiresIn:
          type: integer
          description: Token expiration time in seconds
          example: 3600

    User:
      type: object
      required:
        - id
        - email
        - firstName
        - lastName
        - role
        - tenantId
        - status
        - createdAt
        - updatedAt
      properties:
        id:
          type: string
          format: uuid
          example: "123e4567-e89b-12d3-a456-426614174000"
        email:
          type: string
          format: email
          example: "user@example.com"
        firstName:
          type: string
          example: "John"
        lastName:
          type: string
          example: "Doe"
        role:
          type: string
          enum: [super_admin, tenant_admin, instructor, learner]
          example: "learner"
        tenantId:
          type: string
          format: uuid
          example: "456e7890-e89b-12d3-a456-426614174000"
        status:
          type: string
          enum: [active, inactive, pending, suspended]
          example: "active"
        avatar:
          type: string
          format: uri
          nullable: true
          example: "https://example.com/avatar.jpg"
        lastLoginAt:
          type: string
          format: date-time
          nullable: true
          example: "2023-12-01T10:30:00Z"
        createdAt:
          type: string
          format: date-time
          example: "2023-01-01T00:00:00Z"
        updatedAt:
          type: string
          format: date-time
          example: "2023-12-01T10:30:00Z"

    Error:
      type: object
      required:
        - error
        - message
      properties:
        error:
          type: string
          example: "unauthorized"
        message:
          type: string
          example: "Invalid credentials"
        details:
          type: object
          additionalProperties: true

    ValidationError:
      type: object
      required:
        - error
        - message
        - validationErrors
      properties:
        error:
          type: string
          example: "validation_failed"
        message:
          type: string
          example: "Request validation failed"
        validationErrors:
          type: array
          items:
            type: object
            required:
              - field
              - message
            properties:
              field:
                type: string
                example: "email"
              message:
                type: string
                example: "Invalid email format"
