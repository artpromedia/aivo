openapi: 3.1.0
info:
  title: Learning Orchestrator API
  description: Course orchestration and learning path management service
  version: 1.0.0
  contact:
    name: API Support
    email: api-support@aivo.com
servers:
- url: https://api.aivo.com/orchestrator/v1
  description: Production server
- url: https://staging-api.aivo.com/orchestrator/v1
  description: Staging server
paths:
  /courses:
    get:
      summary: List courses
      operationId: listCourses
      tags:
      - Courses
      security:
      - bearerAuth: []
      parameters:
      - name: tenantId
        in: query
        schema:
          type: string
          format: uuid
        description: The tenantId query parameter
      - name: category
        in: query
        schema:
          type: string
        description: The category query parameter
      - name: difficulty
        in: query
        schema:
          type: string
          enum:
          - beginner
          - intermediate
          - advanced
        description: The difficulty query parameter
      - name: status
        in: query
        schema:
          type: string
          enum:
          - draft
          - published
          - archived
        description: The status query parameter
      - name: search
        in: query
        schema:
          type: string
          description: Search by title or description
        description: The search query parameter
      - name: limit
        in: query
        schema:
          type: integer
          minimum: 1
          maximum: 100
          default: 20
        description: The limit query parameter
      - name: offset
        in: query
        schema:
          type: integer
          minimum: 0
          default: 0
        description: The offset query parameter
      responses:
        '200':
          description: Courses retrieved successfully
          content:
            application/json:
              schema:
                type: object
                required:
                - data
                - total
                - limit
                - offset
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Course'
                  total:
                    type: integer
                    example: 150
                  limit:
                    type: integer
                    example: 20
                  offset:
                    type: integer
                    example: 0
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      description: Retrieve all Courses
    post:
      summary: Create new course
      operationId: createCourse
      tags:
      - Courses
      security:
      - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCourseRequest'
      responses:
        '201':
          description: Course created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
      description: Create a new Course
  /courses/{courseId}:
    get:
      summary: Get course by ID
      operationId: getCourse
      tags:
      - Courses
      security:
      - bearerAuth: []
      parameters:
      - name: courseId
        in: path
        required: true
        schema:
          type: string
          format: uuid
        description: The courseId path parameter
      responses:
        '200':
          description: Course retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseDetailed'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Course not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      description: Retrieve a specific Course
    put:
      summary: Update course
      operationId: updateCourse
      tags:
      - Courses
      security:
      - bearerAuth: []
      parameters:
      - name: courseId
        in: path
        required: true
        schema:
          type: string
          format: uuid
        description: The courseId path parameter
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCourseRequest'
      responses:
        '200':
          description: Course updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Course not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      description: Update a Course
    delete:
      summary: Delete course
      operationId: deleteCourse
      tags:
      - Courses
      security:
      - bearerAuth: []
      parameters:
      - name: courseId
        in: path
        required: true
        schema:
          type: string
          format: uuid
        description: The courseId path parameter
      responses:
        '204':
          description: Course deleted successfully
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Course not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      description: Delete a Course
  /courses/{courseId}/modules:
    get:
      summary: Get course modules
      operationId: getCourseModules
      tags:
      - Modules
      security:
      - bearerAuth: []
      parameters:
      - name: courseId
        in: path
        required: true
        schema:
          type: string
          format: uuid
        description: The courseId path parameter
      responses:
        '200':
          description: Course modules retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Module'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Course not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      description: Retrieve a specific Module
    post:
      summary: Add module to course
      operationId: addCourseModule
      tags:
      - Modules
      security:
      - bearerAuth: []
      parameters:
      - name: courseId
        in: path
        required: true
        schema:
          type: string
          format: uuid
        description: The courseId path parameter
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateModuleRequest'
      responses:
        '201':
          description: Module added successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Module'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Course not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      description: Create a new Module
  /learning-paths:
    get:
      summary: List learning paths
      operationId: listLearningPaths
      tags:
      - Learning Paths
      security:
      - bearerAuth: []
      parameters:
      - name: tenantId
        in: query
        schema:
          type: string
          format: uuid
        description: The tenantId query parameter
      - name: category
        in: query
        schema:
          type: string
        description: The category query parameter
      - name: status
        in: query
        schema:
          type: string
          enum:
          - draft
          - published
          - archived
        description: The status query parameter
      - name: limit
        in: query
        schema:
          type: integer
          minimum: 1
          maximum: 100
          default: 20
        description: The limit query parameter
      - name: offset
        in: query
        schema:
          type: integer
          minimum: 0
          default: 0
        description: The offset query parameter
      responses:
        '200':
          description: Learning paths retrieved successfully
          content:
            application/json:
              schema:
                type: object
                required:
                - data
                - total
                - limit
                - offset
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/LearningPath'
                  total:
                    type: integer
                    example: 50
                  limit:
                    type: integer
                    example: 20
                  offset:
                    type: integer
                    example: 0
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      description: Retrieve all Learning Paths
    post:
      summary: Create new learning path
      operationId: createLearningPath
      tags:
      - Learning Paths
      security:
      - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateLearningPathRequest'
      responses:
        '201':
          description: Learning path created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LearningPath'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
      description: Create a new Learning Path
  /learning-paths/{pathId}:
    get:
      summary: Get learning path by ID
      operationId: getLearningPath
      tags:
      - Learning Paths
      security:
      - bearerAuth: []
      parameters:
      - name: pathId
        in: path
        required: true
        schema:
          type: string
          format: uuid
        description: The pathId path parameter
      responses:
        '200':
          description: Learning path retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LearningPathDetailed'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Learning path not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      description: Retrieve a specific Learning Path
  /assessments:
    get:
      summary: List assessments
      operationId: listAssessments
      tags:
      - Assessments
      security:
      - bearerAuth: []
      parameters:
      - name: courseId
        in: query
        schema:
          type: string
          format: uuid
        description: The courseId query parameter
      - name: moduleId
        in: query
        schema:
          type: string
          format: uuid
        description: The moduleId query parameter
      - name: type
        in: query
        schema:
          type: string
          enum:
          - quiz
          - assignment
          - final_exam
          - certification
        description: The type query parameter
      - name: limit
        in: query
        schema:
          type: integer
          minimum: 1
          maximum: 100
          default: 20
        description: The limit query parameter
      - name: offset
        in: query
        schema:
          type: integer
          minimum: 0
          default: 0
        description: The offset query parameter
      responses:
        '200':
          description: Assessments retrieved successfully
          content:
            application/json:
              schema:
                type: object
                required:
                - data
                - total
                - limit
                - offset
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Assessment'
                  total:
                    type: integer
                    example: 75
                  limit:
                    type: integer
                    example: 20
                  offset:
                    type: integer
                    example: 0
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      description: Retrieve all Assessments
  /assessments/{assessmentId}/submit:
    post:
      summary: Submit assessment
      operationId: submitAssessment
      tags:
      - Assessments
      security:
      - bearerAuth: []
      parameters:
      - name: assessmentId
        in: path
        required: true
        schema:
          type: string
          format: uuid
        description: The assessmentId path parameter
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmitAssessmentRequest'
      responses:
        '200':
          description: Assessment submitted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssessmentResult'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Assessment not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      description: Create a new Submit
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Course:
      type: object
      required:
      - id
      - title
      - description
      - category
      - difficulty
      - status
      - estimatedDuration
      - createdAt
      - updatedAt
      properties:
        id:
          type: string
          format: uuid
          example: cfe16af7-ba73-4f1d-95c1-78b56bdaf8a4
        title:
          type: string
          example: 9fe4ed6c-f477-403b-98ef-39d1af21cc05
        description:
          type: string
          example: 438522b2-4888-4a88-b6f1-eac96688cdc8
        shortDescription:
          type: string
          example: 0ba44e74-3356-4ce8-843d-9b20f0bde6de
        category:
          type: string
          example: a0dbf084-1158-41dd-b3b4-21f38198abed
        tags:
          type: array
          items:
            type: string
          example:
          - javascript
          - programming
          - web-development
        difficulty:
          type: string
          enum:
          - beginner
          - intermediate
          - advanced
          example: advanced
        status:
          type: string
          enum:
          - draft
          - published
          - archived
          example: published
        estimatedDuration:
          type: integer
          description: Estimated duration in minutes
          example: 1200
        thumbnailUrl:
          type: string
          format: uri
          example: https://example.com
        instructorId:
          type: string
          format: uuid
          example: 920d8742-07c0-4d8c-b3d5-7a2319baee24
        prerequisites:
          type: array
          items:
            type: string
            format: uuid
          example:
          - b95eec3d-d8cd-41b4-b2c7-d3bd09791119
          - 432559ce-21e1-4367-a1de-aa0c6d60cf66
        learningObjectives:
          type: array
          items:
            type: string
          example:
          - Understand closures
          - Master async/await
          - Build modern web apps
        moduleCount:
          type: integer
          example: 8
        enrollmentCount:
          type: integer
          example: 1250
        averageRating:
          type: number
          minimum: 0
          maximum: 5
          example: 4.7
        reviewCount:
          type: integer
          example: 127
        isPublic:
          type: boolean
          default: true
        metadata:
          type: object
          additionalProperties: true
        createdAt:
          type: string
          format: date-time
          example: '2025-09-13T00:14:43.146150+00:00'
        updatedAt:
          type: string
          format: date-time
          example: '2025-09-13T00:14:43.146150+00:00'
    CourseDetailed:
      allOf:
      - $ref: '#/components/schemas/Course'
      - type: object
        properties:
          modules:
            type: array
            items:
              $ref: '#/components/schemas/Module'
          assessments:
            type: array
            items:
              $ref: '#/components/schemas/Assessment'
          requirements:
            type: object
            properties:
              systemRequirements:
                type: array
                items:
                  type: string
              softwareRequirements:
                type: array
                items:
                  type: string
    CreateCourseRequest:
      type: object
      required:
      - title
      - description
      - category
      - difficulty
      properties:
        title:
          type: string
          minLength: 3
          maxLength: 200
          example: f1f26202-2a48-4ddb-b30e-90781086c8af
        description:
          type: string
          minLength: 10
          maxLength: 2000
          example: f58322d8-9e64-4173-82f2-65c6f64fd4c5
        shortDescription:
          type: string
          maxLength: 500
          example: 8ffc85f1-7b86-46ea-a4b5-29ee9930ed29
        category:
          type: string
          example: e391531c-4ff0-4860-8e3e-5de270b6a0f0
        tags:
          type: array
          items:
            type: string
          maxItems: 10
        difficulty:
          type: string
          enum:
          - beginner
          - intermediate
          - advanced
          example: advanced
        estimatedDuration:
          type: integer
          minimum: 1
          example: 1200
        thumbnailUrl:
          type: string
          format: uri
          example: https://example.com
        instructorId:
          type: string
          format: uuid
          example: bd28286a-48a7-4232-af87-f6f8f0e581ed
        prerequisites:
          type: array
          items:
            type: string
            format: uuid
        learningObjectives:
          type: array
          items:
            type: string
          maxItems: 20
        isPublic:
          type: boolean
          default: true
        metadata:
          type: object
          additionalProperties: true
    UpdateCourseRequest:
      type: object
      properties:
        title:
          type: string
          minLength: 3
          maxLength: 200
        description:
          type: string
          minLength: 10
          maxLength: 2000
        shortDescription:
          type: string
          maxLength: 500
        category:
          type: string
        tags:
          type: array
          items:
            type: string
          maxItems: 10
        difficulty:
          type: string
          enum:
          - beginner
          - intermediate
          - advanced
        status:
          type: string
          enum:
          - draft
          - published
          - archived
        estimatedDuration:
          type: integer
          minimum: 1
        thumbnailUrl:
          type: string
          format: uri
        learningObjectives:
          type: array
          items:
            type: string
          maxItems: 20
        isPublic:
          type: boolean
        metadata:
          type: object
          additionalProperties: true
    Module:
      type: object
      required:
      - id
      - courseId
      - title
      - type
      - order
      - estimatedDuration
      - createdAt
      - updatedAt
      properties:
        id:
          type: string
          format: uuid
          example: f72ebc5a-4c36-4750-ad0a-33c5f7f3a86d
        courseId:
          type: string
          format: uuid
          example: a6988ad6-9736-49dd-a46b-c3afe6fc7d98
        title:
          type: string
          example: 836d367f-f6ed-4911-bfa6-d1fcbe6216fb
        description:
          type: string
          example: 98ff8e07-170d-4e65-9201-531e1d8c3117
        type:
          type: string
          enum:
          - video
          - text
          - interactive
          - assignment
          - quiz
          example: video
        order:
          type: integer
          minimum: 1
          example: 1
        estimatedDuration:
          type: integer
          description: Estimated duration in minutes
          example: 45
        contentUrl:
          type: string
          format: uri
          example: https://example.com
        transcriptUrl:
          type: string
          format: uri
          nullable: true
          example: https://example.com
        resources:
          type: array
          items:
            type: object
            properties:
              title:
                type: string
              url:
                type: string
                format: uri
              type:
                type: string
                enum:
                - pdf
                - link
                - code
                - dataset
        isOptional:
          type: boolean
          default: false
        prerequisites:
          type: array
          items:
            type: string
            format: uuid
        metadata:
          type: object
          additionalProperties: true
        createdAt:
          type: string
          format: date-time
          example: '2025-09-13T00:14:43.146150+00:00'
        updatedAt:
          type: string
          format: date-time
          example: '2025-09-13T00:14:43.146150+00:00'
    CreateModuleRequest:
      type: object
      required:
      - title
      - type
      - order
      properties:
        title:
          type: string
          minLength: 3
          maxLength: 200
          example: 6eb23d98-59fb-48f4-97f0-17a492b39300
        description:
          type: string
          maxLength: 1000
          example: d731f597-4e60-46f3-876a-83120328a0f4
        type:
          type: string
          enum:
          - video
          - text
          - interactive
          - assignment
          - quiz
          example: video
        order:
          type: integer
          minimum: 1
          example: 1
        estimatedDuration:
          type: integer
          minimum: 1
          example: 45
        contentUrl:
          type: string
          format: uri
          example: https://example.com
        transcriptUrl:
          type: string
          format: uri
          example: https://example.com
        isOptional:
          type: boolean
          default: false
        prerequisites:
          type: array
          items:
            type: string
            format: uuid
        metadata:
          type: object
          additionalProperties: true
    LearningPath:
      type: object
      required:
      - id
      - title
      - description
      - category
      - status
      - estimatedDuration
      - courseCount
      - createdAt
      - updatedAt
      properties:
        id:
          type: string
          format: uuid
          example: 93d459b3-322e-4305-9bfc-4716c7ff419c
        title:
          type: string
          example: e24c058a-47bf-43ab-8f6d-951bd538d71b
        description:
          type: string
          example: 879aa7e7-e1fc-4f83-86cf-68d778671236
        category:
          type: string
          example: 73cf9e49-5960-457e-b457-6cde80f33fa0
        status:
          type: string
          enum:
          - draft
          - published
          - archived
          example: published
        difficulty:
          type: string
          enum:
          - beginner
          - intermediate
          - advanced
          example: beginner
        estimatedDuration:
          type: integer
          description: Total estimated duration in minutes
          example: 7200
        thumbnailUrl:
          type: string
          format: uri
          example: https://example.com
        courseCount:
          type: integer
          example: 6
        enrollmentCount:
          type: integer
          example: 500
        averageRating:
          type: number
          minimum: 0
          maximum: 5
          example: 4.5
        tags:
          type: array
          items:
            type: string
          example:
          - javascript
          - react
          - nodejs
          - database
        createdAt:
          type: string
          format: date-time
          example: '2025-09-13T00:14:43.147657+00:00'
        updatedAt:
          type: string
          format: date-time
          example: '2025-09-13T00:14:43.147657+00:00'
    LearningPathDetailed:
      allOf:
      - $ref: '#/components/schemas/LearningPath'
      - type: object
        properties:
          courses:
            type: array
            items:
              type: object
              properties:
                courseId:
                  type: string
                  format: uuid
                course:
                  $ref: '#/components/schemas/Course'
                order:
                  type: integer
                isOptional:
                  type: boolean
                unlockConditions:
                  type: object
                  properties:
                    prerequisiteCourses:
                      type: array
                      items:
                        type: string
                        format: uuid
                    minimumScore:
                      type: number
                      minimum: 0
                      maximum: 100
    CreateLearningPathRequest:
      type: object
      required:
      - title
      - description
      - category
      - courses
      properties:
        title:
          type: string
          minLength: 3
          maxLength: 200
          example: 6175629a-5c38-47b6-9d7c-387990be9263
        description:
          type: string
          minLength: 10
          maxLength: 2000
          example: 964d4b8e-99e2-493a-b538-2bece8fa179a
        category:
          type: string
          example: 79024f9f-5451-48b9-8229-81d23090295b
        difficulty:
          type: string
          enum:
          - beginner
          - intermediate
          - advanced
          example: beginner
        thumbnailUrl:
          type: string
          format: uri
          example: https://example.com
        tags:
          type: array
          items:
            type: string
          maxItems: 10
        courses:
          type: array
          items:
            type: object
            required:
            - courseId
            - order
            properties:
              courseId:
                type: string
                format: uuid
              order:
                type: integer
                minimum: 1
              isOptional:
                type: boolean
                default: false
          minItems: 1
    Assessment:
      type: object
      required:
      - id
      - title
      - type
      - courseId
      - maxScore
      - passingScore
      - timeLimit
      - createdAt
      - updatedAt
      properties:
        id:
          type: string
          format: uuid
          example: 8ec37e42-1693-4970-b88d-e02b41ebafbf
        title:
          type: string
          example: dc44eeaa-a539-4fff-b816-08755a4394f5
        description:
          type: string
          example: 7f56648f-295e-4db1-9319-94dfad826579
        type:
          type: string
          enum:
          - quiz
          - assignment
          - final_exam
          - certification
          example: quiz
        courseId:
          type: string
          format: uuid
          example: 203fc356-fdb0-4e7d-a8a0-5236609fc84b
        moduleId:
          type: string
          format: uuid
          nullable: true
          example: fb8222b4-c9fa-4fc1-bd10-6e30d7cef252
        maxScore:
          type: number
          minimum: 0
          example: 100
        passingScore:
          type: number
          minimum: 0
          example: 70
        timeLimit:
          type: integer
          description: Time limit in minutes
          nullable: true
          example: 60
        attemptsAllowed:
          type: integer
          minimum: 1
          nullable: true
          example: 3
        questionCount:
          type: integer
          example: 20
        isRequired:
          type: boolean
          default: true
        metadata:
          type: object
          additionalProperties: true
        createdAt:
          type: string
          format: date-time
          example: '2025-09-13T00:14:43.147657+00:00'
        updatedAt:
          type: string
          format: date-time
          example: '2025-09-13T00:14:43.147657+00:00'
    SubmitAssessmentRequest:
      type: object
      required:
      - answers
      properties:
        answers:
          type: array
          items:
            type: object
            required:
            - questionId
            - answer
            properties:
              questionId:
                type: string
                format: uuid
              answer:
                oneOf:
                - type: string
                - type: array
                  items:
                    type: string
                - type: number
        timeSpent:
          type: integer
          description: Time spent in minutes
          example: 45
    AssessmentResult:
      type: object
      required:
      - id
      - assessmentId
      - learnerId
      - score
      - maxScore
      - passed
      - submittedAt
      properties:
        id:
          type: string
          format: uuid
          example: 568b29d8-fc70-4d8c-802a-e82fa42a7fa5
        assessmentId:
          type: string
          format: uuid
          example: 673d7eaf-bbe1-4e5c-982d-d67a3581aaa1
        learnerId:
          type: string
          format: uuid
          example: ca89b61a-2e0e-489e-9199-cfce3f7d474c
        score:
          type: number
          example: 85
        maxScore:
          type: number
          example: 100
        percentage:
          type: number
          minimum: 0
          maximum: 100
          example: 85
        passed:
          type: boolean
          example: true
        timeSpent:
          type: integer
          description: Time spent in minutes
          example: 45
        attempt:
          type: integer
          example: 1
        feedback:
          type: string
          nullable: true
          example: 7fee036c-2c21-4e59-bf23-35b1830ec19b
        detailedResults:
          type: array
          items:
            type: object
            properties:
              questionId:
                type: string
                format: uuid
              correct:
                type: boolean
              points:
                type: number
              feedback:
                type: string
        submittedAt:
          type: string
          format: date-time
          example: '2025-09-13T00:14:43.148662+00:00'
    Error:
      type: object
      required:
      - error
      - message
      properties:
        error:
          type: string
          example: d43b5dd9-1466-4b1d-9c1d-348fcdbf9d51
        message:
          type: string
          example: 47cba4e7-5db2-43d9-86b1-9e74db135ca4
        details:
          type: object
          additionalProperties: true
    ValidationError:
      type: object
      required:
      - error
      - message
      - validationErrors
      properties:
        error:
          type: string
          example: e4feb932-38a8-4ab7-a797-629b3346d895
        message:
          type: string
          example: eccc84d9-0ccc-485c-a9fb-b144cb1b891e
        validationErrors:
          type: array
          items:
            type: object
            required:
            - field
            - message
            properties:
              field:
                type: string
                example: title
              message:
                type: string
                example: 96050324-edff-4a35-928a-9f49beff0e19
tags:
- name: Assessments
  description: Assessments operations
- name: Courses
  description: Courses operations
- name: Learning Paths
  description: Learning Paths operations
- name: Modules
  description: Modules operations
