openapi: 3.1.0
info:
  title: Payments & Billing API
  description: Subscription billing and payment processing service
  version: 1.0.0
  contact:
    name: API Support
    email: api-support@aivo.com
servers:
- url: https://api.aivo.com/payments/v1
  description: Production server
- url: https://staging-api.aivo.com/payments/v1
  description: Staging server
paths:
  /subscriptions:
    get:
      summary: List subscriptions
      operationId: listSubscriptions
      tags:
      - Subscriptions
      security:
      - bearerAuth: []
      parameters:
      - name: tenantId
        in: query
        schema:
          type: string
          format: uuid
        description: The tenantId query parameter
      - name: status
        in: query
        schema:
          type: string
          enum:
          - active
          - inactive
          - past_due
          - canceled
          - trialing
        description: The status query parameter
      - name: limit
        in: query
        schema:
          type: integer
          minimum: 1
          maximum: 100
          default: 20
        description: The limit query parameter
      - name: offset
        in: query
        schema:
          type: integer
          minimum: 0
          default: 0
        description: The offset query parameter
      responses:
        '200':
          description: Subscriptions retrieved successfully
          content:
            application/json:
              schema:
                type: object
                required:
                - data
                - total
                - limit
                - offset
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Subscription'
                  total:
                    type: integer
                    example: 50
                  limit:
                    type: integer
                    example: 20
                  offset:
                    type: integer
                    example: 0
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      description: Retrieve all Subscriptions
    post:
      summary: Create new subscription
      operationId: createSubscription
      tags:
      - Subscriptions
      security:
      - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSubscriptionRequest'
      responses:
        '201':
          description: Subscription created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
      description: Create a new Subscription
  /subscriptions/{subscriptionId}:
    get:
      summary: Get subscription by ID
      operationId: getSubscription
      tags:
      - Subscriptions
      security:
      - bearerAuth: []
      parameters:
      - name: subscriptionId
        in: path
        required: true
        schema:
          type: string
          format: uuid
        description: The subscriptionId path parameter
      responses:
        '200':
          description: Subscription retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Subscription not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      description: Retrieve a specific Subscription
    put:
      summary: Update subscription
      operationId: updateSubscription
      tags:
      - Subscriptions
      security:
      - bearerAuth: []
      parameters:
      - name: subscriptionId
        in: path
        required: true
        schema:
          type: string
          format: uuid
        description: The subscriptionId path parameter
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSubscriptionRequest'
      responses:
        '200':
          description: Subscription updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Subscription not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      description: Update a Subscription
  /subscriptions/{subscriptionId}/cancel:
    post:
      summary: Cancel subscription
      operationId: cancelSubscription
      tags:
      - Subscriptions
      security:
      - bearerAuth: []
      parameters:
      - name: subscriptionId
        in: path
        required: true
        schema:
          type: string
          format: uuid
        description: The subscriptionId path parameter
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                reason:
                  type: string
                  example: Customer requested cancellation
                cancelAtPeriodEnd:
                  type: boolean
                  default: true
      responses:
        '200':
          description: Subscription canceled successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Subscription not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      description: Create a new Cancel
  /invoices:
    get:
      summary: List invoices
      operationId: listInvoices
      tags:
      - Invoices
      security:
      - bearerAuth: []
      parameters:
      - name: tenantId
        in: query
        schema:
          type: string
          format: uuid
        description: The tenantId query parameter
      - name: subscriptionId
        in: query
        schema:
          type: string
          format: uuid
        description: The subscriptionId query parameter
      - name: status
        in: query
        schema:
          type: string
          enum:
          - draft
          - open
          - paid
          - void
          - uncollectible
        description: The status query parameter
      - name: limit
        in: query
        schema:
          type: integer
          minimum: 1
          maximum: 100
          default: 20
        description: The limit query parameter
      - name: offset
        in: query
        schema:
          type: integer
          minimum: 0
          default: 0
        description: The offset query parameter
      responses:
        '200':
          description: Invoices retrieved successfully
          content:
            application/json:
              schema:
                type: object
                required:
                - data
                - total
                - limit
                - offset
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Invoice'
                  total:
                    type: integer
                    example: 100
                  limit:
                    type: integer
                    example: 20
                  offset:
                    type: integer
                    example: 0
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      description: Retrieve all Invoices
  /invoices/{invoiceId}:
    get:
      summary: Get invoice by ID
      operationId: getInvoice
      tags:
      - Invoices
      security:
      - bearerAuth: []
      parameters:
      - name: invoiceId
        in: path
        required: true
        schema:
          type: string
          format: uuid
        description: The invoiceId path parameter
      responses:
        '200':
          description: Invoice retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Invoice not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      description: Retrieve a specific Invoice
  /payment-methods:
    get:
      summary: List payment methods
      operationId: listPaymentMethods
      tags:
      - Payment Methods
      security:
      - bearerAuth: []
      parameters:
      - name: tenantId
        in: query
        required: true
        schema:
          type: string
          format: uuid
        description: The tenantId query parameter
      responses:
        '200':
          description: Payment methods retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PaymentMethod'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      description: Retrieve all Payment Methods
    post:
      summary: Add payment method
      operationId: addPaymentMethod
      tags:
      - Payment Methods
      security:
      - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddPaymentMethodRequest'
      responses:
        '201':
          description: Payment method added successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMethod'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      description: Create a new Payment Method
  /payment-methods/{paymentMethodId}:
    delete:
      summary: Remove payment method
      operationId: removePaymentMethod
      tags:
      - Payment Methods
      security:
      - bearerAuth: []
      parameters:
      - name: paymentMethodId
        in: path
        required: true
        schema:
          type: string
          format: uuid
        description: The paymentMethodId path parameter
      responses:
        '204':
          description: Payment method removed successfully
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Payment method not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      description: Delete a Payment Method
  /coupons:
    get:
      summary: List coupons
      operationId: listCoupons
      tags:
      - Coupons
      security:
      - bearerAuth: []
      parameters:
      - name: tenantId
        in: query
        schema:
          type: string
          format: uuid
        description: The tenantId query parameter
      - name: active
        in: query
        schema:
          type: boolean
        description: The active query parameter
      - name: limit
        in: query
        schema:
          type: integer
          minimum: 1
          maximum: 100
          default: 20
        description: The limit query parameter
      responses:
        '200':
          description: Coupons retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Coupon'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      description: Retrieve all Coupons
    post:
      summary: Create coupon
      operationId: createCoupon
      tags:
      - Coupons
      security:
      - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCouponRequest'
      responses:
        '201':
          description: Coupon created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Coupon'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      description: Create a new Coupon
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Subscription:
      type: object
      required:
      - id
      - tenantId
      - planId
      - status
      - currentPeriodStart
      - currentPeriodEnd
      - createdAt
      - updatedAt
      properties:
        id:
          type: string
          format: uuid
          example: fbfe5892-2a21-4793-bc86-e19d8f3e267b
        tenantId:
          type: string
          format: uuid
          example: 79e5b3d9-a140-4750-83b9-8f576c88cf8f
        planId:
          type: string
          example: c9396c00-1e1f-43db-a0b0-2032650d01ad
        status:
          type: string
          enum:
          - active
          - inactive
          - past_due
          - canceled
          - trialing
          example: active
        quantity:
          type: integer
          minimum: 1
          example: 50
        unitAmount:
          type: integer
          description: Amount in cents
          example: 4999
        currency:
          type: string
          example: usd
        currentPeriodStart:
          type: string
          format: date-time
          example: '2025-09-13T00:14:43.213064+00:00'
        currentPeriodEnd:
          type: string
          format: date-time
          example: '2025-09-13T00:14:43.213064+00:00'
        trialStart:
          type: string
          format: date-time
          nullable: true
          example: '2025-09-13T00:14:43.213064+00:00'
        trialEnd:
          type: string
          format: date-time
          nullable: true
          example: '2025-09-13T00:14:43.213064+00:00'
        cancelAtPeriodEnd:
          type: boolean
          default: false
        canceledAt:
          type: string
          format: date-time
          nullable: true
        discount:
          $ref: '#/components/schemas/Discount'
        metadata:
          type: object
          additionalProperties: true
        createdAt:
          type: string
          format: date-time
          example: '2025-09-13T00:14:43.213064+00:00'
        updatedAt:
          type: string
          format: date-time
          example: '2025-09-13T00:14:43.214060+00:00'
    CreateSubscriptionRequest:
      type: object
      required:
      - tenantId
      - planId
      properties:
        tenantId:
          type: string
          format: uuid
          example: 2640566f-d698-4bf9-b353-fabd4d19e719
        planId:
          type: string
          example: c6c80dee-dbc6-4e6b-ad0e-86c419c5606d
        quantity:
          type: integer
          minimum: 1
          default: 1
          example: 50
        trialPeriodDays:
          type: integer
          minimum: 0
          example: 14
        couponCode:
          type: string
          example: WELCOME20
        paymentMethodId:
          type: string
          format: uuid
          example: 53d3b77d-c3f4-4f8b-8010-e4f61a3a18b1
        metadata:
          type: object
          additionalProperties: true
    UpdateSubscriptionRequest:
      type: object
      properties:
        planId:
          type: string
          example: 62b5af27-664f-4fc5-b3e0-4aee0b20ba66
        quantity:
          type: integer
          minimum: 1
          example: 100
        metadata:
          type: object
          additionalProperties: true
    Invoice:
      type: object
      required:
      - id
      - subscriptionId
      - tenantId
      - status
      - amountDue
      - amountPaid
      - currency
      - dueDate
      - createdAt
      properties:
        id:
          type: string
          format: uuid
          example: f78288f0-133e-4864-b65e-2b539d260cd1
        subscriptionId:
          type: string
          format: uuid
          example: 7b439f47-aca3-4475-a23d-1a61ec3b6ffd
        tenantId:
          type: string
          format: uuid
          example: 1edb5c43-57fc-49bc-84d4-32734f9e39f9
        invoiceNumber:
          type: string
          example: 2f7bce9f-9432-43f8-beda-0fcd728661e9
        status:
          type: string
          enum:
          - draft
          - open
          - paid
          - void
          - uncollectible
          example: paid
        amountDue:
          type: integer
          description: Amount in cents
          example: 4999
        amountPaid:
          type: integer
          description: Amount in cents
          example: 4999
        currency:
          type: string
          example: usd
        dueDate:
          type: string
          format: date-time
          example: '2025-09-13T00:14:43.214060+00:00'
        paidAt:
          type: string
          format: date-time
          nullable: true
          example: '2025-09-13T00:14:43.214060+00:00'
        periodStart:
          type: string
          format: date-time
          example: '2025-09-13T00:14:43.214060+00:00'
        periodEnd:
          type: string
          format: date-time
          example: '2025-09-13T00:14:43.214060+00:00'
        downloadUrl:
          type: string
          format: uri
          nullable: true
          example: https://example.com
        lineItems:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceLineItem'
        createdAt:
          type: string
          format: date-time
          example: '2025-09-13T00:14:43.214060+00:00'
    InvoiceLineItem:
      type: object
      required:
      - description
      - quantity
      - unitAmount
      - amount
      properties:
        description:
          type: string
          example: 9e18d856-d49f-4b24-9574-c2825f95b0c4
        quantity:
          type: integer
          example: 50
        unitAmount:
          type: integer
          description: Amount in cents
          example: 99
        amount:
          type: integer
          description: Total amount in cents
          example: 4950
    PaymentMethod:
      type: object
      required:
      - id
      - tenantId
      - type
      - isDefault
      - createdAt
      properties:
        id:
          type: string
          format: uuid
          example: 390fb4d7-872a-4ce2-914f-d01eb370d593
        tenantId:
          type: string
          format: uuid
          example: e1f24175-a5c7-47dc-9997-a7b058739060
        type:
          type: string
          enum:
          - card
          - bank_account
          - paypal
          example: card
        isDefault:
          type: boolean
          example: true
        card:
          type: object
          properties:
            brand:
              type: string
              example: visa
            last4:
              type: string
              example: '4242'
            expMonth:
              type: integer
              example: 12
            expYear:
              type: integer
              example: 2025
        bankAccount:
          type: object
          properties:
            bankName:
              type: string
              example: Chase Bank
            last4:
              type: string
              example: '6789'
            accountType:
              type: string
              enum:
              - checking
              - savings
              example: checking
        createdAt:
          type: string
          format: date-time
          example: '2025-09-13T00:14:43.214060+00:00'
    AddPaymentMethodRequest:
      type: object
      required:
      - tenantId
      - type
      - token
      properties:
        tenantId:
          type: string
          format: uuid
          example: 5092e516-f6e8-4b6a-b045-cd35515c4022
        type:
          type: string
          enum:
          - card
          - bank_account
          - paypal
          example: card
        token:
          type: string
          description: Payment method token from payment processor
          example: 395ed9a0-25f2-4c30-ab91-19ff6b5d4fb9
        isDefault:
          type: boolean
          default: false
    Coupon:
      type: object
      required:
      - id
      - code
      - discountType
      - discountValue
      - active
      - createdAt
      properties:
        id:
          type: string
          format: uuid
          example: 0bc7ae87-6bfc-4b24-9bf8-ddffe822ee57
        code:
          type: string
          example: WELCOME20
        name:
          type: string
          example: 17a23649-b3d5-406a-9570-6c47dc1906b9
        discountType:
          type: string
          enum:
          - percent
          - amount
          example: percent
        discountValue:
          type: number
          example: 20.0
        maxRedemptions:
          type: integer
          nullable: true
          example: 100
        redemptions:
          type: integer
          example: 45
        validFrom:
          type: string
          format: date-time
          example: '2025-09-13T00:14:43.215060+00:00'
        validUntil:
          type: string
          format: date-time
          nullable: true
          example: '2025-09-13T00:14:43.215060+00:00'
        active:
          type: boolean
          example: true
        createdAt:
          type: string
          format: date-time
          example: '2025-09-13T00:14:43.215060+00:00'
    CreateCouponRequest:
      type: object
      required:
      - code
      - discountType
      - discountValue
      properties:
        code:
          type: string
          pattern: ^[A-Z0-9_-]+$
          minLength: 3
          maxLength: 20
          example: WELCOME20
        name:
          type: string
          example: 16d5ffab-26b4-4bb5-bf7e-67a38f8e4318
        discountType:
          type: string
          enum:
          - percent
          - amount
          example: percent
        discountValue:
          type: number
          minimum: 0
          example: 20.0
        maxRedemptions:
          type: integer
          minimum: 1
          example: 100
        validFrom:
          type: string
          format: date-time
          example: '2025-09-13T00:14:43.215060+00:00'
        validUntil:
          type: string
          format: date-time
          example: '2025-09-13T00:14:43.215060+00:00'
    Discount:
      type: object
      nullable: true
      properties:
        couponId:
          type: string
          format: uuid
          example: 7ab0a629-e54b-4814-bf54-31056f9c7e0a
        couponCode:
          type: string
          example: WELCOME20
        discountType:
          type: string
          enum:
          - percent
          - amount
          example: percent
        discountValue:
          type: number
          example: 20.0
    Error:
      type: object
      required:
      - error
      - message
      properties:
        error:
          type: string
          example: 86a78c07-b161-4e62-8e5a-9b8eaad8f2e7
        message:
          type: string
          example: 85aaa32b-b364-4fb3-8b17-372175166ca9
        details:
          type: object
          additionalProperties: true
    ValidationError:
      type: object
      required:
      - error
      - message
      - validationErrors
      properties:
        error:
          type: string
          example: cd416ec1-7d5a-484d-9387-69d73d419adf
        message:
          type: string
          example: f8c9be0b-e069-4389-8100-16cad62da500
        validationErrors:
          type: array
          items:
            type: object
            required:
            - field
            - message
            properties:
              field:
                type: string
                example: planId
              message:
                type: string
                example: d01273ac-21f2-4e19-9d48-3a72385b5577
tags:
- name: Payment Methods
  description: Payment Methods operations
- name: Subscriptions
  description: Subscriptions operations
- name: Coupons
  description: Coupons operations
- name: Invoices
  description: Invoices operations
