openapi: 3.1.0
info:
  title: Ink Capture Service API
  description: |
    Digital ink capture service for stylus and finger input. Captures strokes, 
    stores NDJSON pages in S3, and emits recognition events for processing.

    ## Features
    - **Stroke Capture**: Process digital ink strokes from stylus/finger input
    - **Consent Gate**: Validate learner consent and permissions  
    - **Media Gate**: Apply content filtering and validation policies
    - **S3 Storage**: Store ink pages as NDJSON for recognition processing
    - **Event Publishing**: Emit INK_READY events to trigger recognition jobs
    - **Session Management**: Track drawing sessions and page counts

    ## Authentication
    This service requires appropriate authentication tokens for learner identification
    and session management.
  version: 1.0.0
  contact:
    name: API Support
    email: api-support@aivo.com

servers:
  - url: https://api.aivo.com/ink/v1
    description: Production server
  - url: https://staging-api.aivo.com/ink/v1
    description: Staging server

paths:
  /strokes:
    post:
      summary: Submit digital ink strokes
      operationId: submitStrokes
      tags:
        - Ink Capture
      description: |
        Submit a batch of digital ink strokes for processing. This endpoint:
        1. Validates consent and media policies
        2. Stores stroke data as NDJSON in S3
        3. Creates database records for tracking
        4. Emits INK_READY event for recognition processing
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StrokeRequest'
            examples:
              math_strokes:
                summary: Math equation strokes
                value:
                  session_id: "550e8400-e29b-41d4-a716-446655440001"
                  learner_id: "550e8400-e29b-41d4-a716-446655440002"
                  subject: "mathematics"
                  page_number: 1
                  canvas_width: 800
                  canvas_height: 600
                  strokes:
                    - stroke_id: "550e8400-e29b-41d4-a716-446655440003"
                      tool_type: "pen"
                      color: "#000000"
                      width: 2.0
                      points:
                        - x: 100
                          y: 150
                          pressure: 0.8
                          timestamp: 0
                        - x: 105
                          y: 152
                          pressure: 0.9
                          timestamp: 16
      responses:
        '201':
          description: Strokes processed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StrokeResponse'
        '400':
          description: Validation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /sessions/{sessionId}/status:
    get:
      summary: Get session status
      operationId: getSessionStatus
      tags:
        - Session Management
      description: Retrieve status information for an ink capture session
      parameters:
        - name: sessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Session identifier
      responses:
        '200':
          description: Session status retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  session_id:
                    type: string
                    format: uuid
                  learner_id:
                    type: string
                    format: uuid
                  subject:
                    type: string
                  status:
                    type: string
                    enum: [active, completed, expired, cancelled]
                  page_count:
                    type: integer
                  created_at:
                    type: string
                    format: date-time
                  last_activity:
                    type: string
                    format: date-time
        '404':
          description: Session not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /healthz:
    get:
      summary: Health check
      operationId: healthCheck
      tags:
        - System
      description: Check service health and dependency status
      responses:
        '200':
          description: Service is healthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'

components:
  schemas:
    Point:
      type: object
      required:
        - x
        - y
        - timestamp
      properties:
        x:
          type: number
          minimum: 0
          description: X coordinate
        y:
          type: number
          minimum: 0
          description: Y coordinate
        pressure:
          type: number
          minimum: 0
          maximum: 1
          default: 1.0
          description: Pressure value
        timestamp:
          type: integer
          minimum: 0
          description: Timestamp in milliseconds since stroke start

    Stroke:
      type: object
      required:
        - stroke_id
        - points
      properties:
        stroke_id:
          type: string
          format: uuid
          description: Unique identifier for the stroke
        points:
          type: array
          minItems: 1
          maxItems: 10000
          items:
            $ref: '#/components/schemas/Point'
          description: Ordered list of points in the stroke
        tool_type:
          type: string
          enum: [pen, finger, eraser, highlighter]
          default: pen
          description: Input tool type
        color:
          type: string
          pattern: '^#[0-9A-Fa-f]{6}$'
          default: "#000000"
          description: Stroke color in hex format
        width:
          type: number
          minimum: 0.1
          maximum: 50
          default: 2.0
          description: Stroke width in pixels
        created_at:
          type: string
          format: date-time
          description: Stroke creation timestamp

    StrokeRequest:
      type: object
      required:
        - session_id
        - learner_id
        - subject
        - strokes
        - canvas_width
        - canvas_height
      properties:
        session_id:
          type: string
          format: uuid
          description: Unique session identifier
        learner_id:
          type: string
          format: uuid
          description: Learner who created the strokes
        subject:
          type: string
          minLength: 1
          maxLength: 100
          description: Subject area (math, science, etc.)
        strokes:
          type: array
          minItems: 1
          maxItems: 1000
          items:
            $ref: '#/components/schemas/Stroke'
          description: List of strokes to submit
        page_number:
          type: integer
          minimum: 1
          default: 1
          description: Page number within the session
        canvas_width:
          type: number
          minimum: 1
          description: Canvas width in pixels
        canvas_height:
          type: number
          minimum: 1
          description: Canvas height in pixels
        metadata:
          type: object
          additionalProperties: true
          description: Additional metadata

    StrokeResponse:
      type: object
      required:
        - session_id
        - page_id
        - s3_key
        - stroke_count
        - created_at
      properties:
        session_id:
          type: string
          format: uuid
          description: Session identifier
        page_id:
          type: string
          format: uuid
          description: Generated page identifier
        s3_key:
          type: string
          description: S3 storage key for the page data
        stroke_count:
          type: integer
          description: Number of strokes processed
        recognition_job_id:
          type: string
          format: uuid
          nullable: true
          description: ID of triggered recognition job
        created_at:
          type: string
          format: date-time
          description: Response timestamp

    ErrorResponse:
      type: object
      required:
        - error
        - message
      properties:
        error:
          type: string
          description: Error type identifier
        message:
          type: string
          description: Human-readable error message
        details:
          type: object
          additionalProperties: true
          description: Additional error details

    HealthResponse:
      type: object
      required:
        - status
        - timestamp
        - version
      properties:
        status:
          type: string
          enum: [healthy, unhealthy]
          description: Service health status
        timestamp:
          type: string
          format: date-time
          description: Health check timestamp
        version:
          type: string
          description: Service version
        dependencies:
          type: object
          additionalProperties:
            type: string
          description: Dependency status

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

security:
  - BearerAuth: []

tags:
  - name: Ink Capture
    description: Digital ink stroke capture and processing
  - name: Session Management
    description: Drawing session tracking and management
  - name: System
    description: System health and monitoring
