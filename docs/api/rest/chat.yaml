openapi: 3.1.0
info:
  title: Chat Service API
  description: Chat service with parental controls, moderation, and audit capabilities
  version: 1.0.0
  contact:
    name: API Support
    email: api-support@aivo.com
servers:
- url: https://api.aivo.com/chat/v1
  description: Production server
- url: https://staging-api.aivo.com/chat/v1
  description: Staging server
- url: http://localhost:8000/api/v1/chat
  description: Development server
security:
- bearerAuth: []
paths:
  /sessions:
    post:
      summary: Create chat session
      operationId: createChatSession
      tags:
      - Chat Sessions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatSessionCreate'
      responses:
        '201':
          description: Chat session created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatSessionResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
      description: Create a new Session
    get:
      summary: Get chat sessions
      operationId: getChatSessions
      tags:
      - Chat Sessions
      parameters:
      - name: user_id
        in: query
        schema:
          type: string
          format: uuid
        description: The user_id query parameter
      - name: chat_type
        in: query
        schema:
          $ref: '#/components/schemas/ChatType'
        description: The chat_type query parameter
      - name: is_active
        in: query
        schema:
          type: boolean
        description: The is_active query parameter
      - name: limit
        in: query
        schema:
          type: integer
          maximum: 100
          default: 50
        description: The limit query parameter
      - name: offset
        in: query
        schema:
          type: integer
          minimum: 0
          default: 0
        description: The offset query parameter
      responses:
        '200':
          description: List of chat sessions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChatSessionResponse'
      description: Retrieve all Sessions
  /sessions/{sessionId}:
    get:
      summary: Get chat session by ID
      operationId: getChatSession
      tags:
      - Chat Sessions
      parameters:
      - name: sessionId
        in: path
        required: true
        schema:
          type: string
          format: uuid
        description: The sessionId path parameter
      responses:
        '200':
          description: Chat session details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatSessionResponse'
        '404':
          $ref: '#/components/responses/NotFound'
      description: Retrieve a specific Session
  /messages:
    post:
      summary: Create message
      operationId: createMessage
      tags:
      - Messages
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MessageCreate'
      responses:
        '201':
          description: Message created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
      description: Create a new Message
    delete:
      summary: Delete chat data
      operationId: deleteChatData
      tags:
      - Data Management
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatDeleteRequest'
      responses:
        '200':
          description: Deletion completed
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  deleted_count:
                    type: integer
                  hard_delete:
                    type: boolean
      description: Delete a Message
  /sessions/{sessionId}/messages:
    get:
      summary: Get messages for session
      operationId: getSessionMessages
      tags:
      - Messages
      parameters:
      - name: sessionId
        in: path
        required: true
        schema:
          type: string
          format: uuid
        description: The sessionId path parameter
      - name: include_blocked
        in: query
        schema:
          type: boolean
          default: false
        description: The include_blocked query parameter
      - name: limit
        in: query
        schema:
          type: integer
          maximum: 100
          default: 50
        description: The limit query parameter
      - name: offset
        in: query
        schema:
          type: integer
          minimum: 0
          default: 0
        description: The offset query parameter
      responses:
        '200':
          description: List of messages
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MessageResponse'
      description: Retrieve a specific Message
  /parental-controls:
    post:
      summary: Create parental controls
      operationId: createParentalControls
      tags:
      - Parental Controls
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ParentalControlCreate'
      responses:
        '201':
          description: Parental controls created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParentalControlResponse'
        '409':
          description: Parental controls already exist
      description: Create a new Parental Control
  /parental-controls/{parentId}/{learnerId}:
    get:
      summary: Get parental controls
      operationId: getParentalControls
      tags:
      - Parental Controls
      parameters:
      - name: parentId
        in: path
        required: true
        schema:
          type: string
          format: uuid
        description: The parentId path parameter
      - name: learnerId
        in: path
        required: true
        schema:
          type: string
          format: uuid
        description: The learnerId path parameter
      responses:
        '200':
          description: Parental control settings
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParentalControlResponse'
      description: Retrieve a specific Parental Control
  /parental-controls/{controlId}:
    put:
      summary: Update parental controls
      operationId: updateParentalControls
      tags:
      - Parental Controls
      parameters:
      - name: controlId
        in: path
        required: true
        schema:
          type: string
          format: uuid
        description: The controlId path parameter
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ParentalControlUpdate'
      responses:
        '200':
          description: Parental controls updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParentalControlResponse'
      description: Update a Parental Control
  /export:
    post:
      summary: Export chat data
      operationId: exportChatData
      tags:
      - Data Management
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatExportRequest'
      responses:
        '200':
          description: Export initiated
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  export_keys:
                    type: array
                    items:
                      type: string
                  total_messages:
                    type: integer
      description: Create a new Export
  /stats/moderation:
    get:
      summary: Get moderation statistics
      operationId: getModerationStats
      tags:
      - Statistics
      parameters:
      - name: start_date
        in: query
        schema:
          type: string
          format: date-time
        description: The start_date query parameter
      - name: end_date
        in: query
        schema:
          type: string
          format: date-time
        description: The end_date query parameter
      responses:
        '200':
          description: Moderation statistics
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModerationStats'
      description: Retrieve all Moderation
  /stats/sessions:
    get:
      summary: Get session statistics
      operationId: getSessionStats
      tags:
      - Statistics
      parameters:
      - name: start_date
        in: query
        schema:
          type: string
          format: date-time
        description: The start_date query parameter
      - name: end_date
        in: query
        schema:
          type: string
          format: date-time
        description: The end_date query parameter
      responses:
        '200':
          description: Session statistics
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatSessionStats'
      description: Retrieve all Sessions
  /audit/{messageId}:
    get:
      summary: Get message audit trail
      operationId: getMessageAuditTrail
      tags:
      - Audit
      parameters:
      - name: messageId
        in: path
        required: true
        schema:
          type: string
          format: uuid
        description: The messageId path parameter
      responses:
        '200':
          description: Audit trail entries
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditEntryResponse'
      description: Retrieve a specific Audit
  /health:
    get:
      summary: Health check
      operationId: chatServiceHealthCheck
      tags:
      - Health
      security: []
      responses:
        '200':
          description: Service health status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'
      description: Retrieve all Health
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    ChatType:
      type: string
      enum:
      - parent_teacher
      - parent_ai_coach
      - learner_ai_tutor
      - teacher_ai_coach
    UserRole:
      type: string
      enum:
      - learner
      - teacher
      - parent
      - ai_coach
      - ai_tutor
    MessageStatus:
      type: string
      enum:
      - pending
      - approved
      - blocked
      - flagged
      - archived
    ModerationAction:
      type: string
      enum:
      - approved
      - soft_block
      - hard_block
      - human_review
      - pii_scrubbed
    ChatSessionCreate:
      type: object
      required:
      - chat_type
      - participants
      properties:
        chat_type:
          $ref: '#/components/schemas/ChatType'
        participants:
          type: array
          items:
            type: string
            format: uuid
        learner_id:
          type: string
          format: uuid
        parent_id:
          type: string
          format: uuid
        teacher_id:
          type: string
          format: uuid
        parental_controls_enabled:
          type: boolean
          default: true
        ai_tutor_enabled:
          type: boolean
          default: true
        moderation_level:
          type: string
          default: strict
    ChatSessionResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        chat_type:
          $ref: '#/components/schemas/ChatType'
        participants:
          type: array
          items:
            type: string
            format: uuid
        learner_id:
          type: string
          format: uuid
        parent_id:
          type: string
          format: uuid
        teacher_id:
          type: string
          format: uuid
        parental_controls_enabled:
          type: boolean
        ai_tutor_enabled:
          type: boolean
        moderation_level:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        ended_at:
          type: string
          format: date-time
        is_active:
          type: boolean
        auto_archive_days:
          type: integer
    MessageCreate:
      type: object
      required:
      - session_id
      - sender_id
      - sender_role
      - content
      properties:
        session_id:
          type: string
          format: uuid
        sender_id:
          type: string
          format: uuid
        sender_role:
          $ref: '#/components/schemas/UserRole'
        content:
          type: string
          minLength: 1
          maxLength: 10000
        message_type:
          type: string
          default: text
    MessageResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        session_id:
          type: string
          format: uuid
        sender_id:
          type: string
          format: uuid
        sender_role:
          $ref: '#/components/schemas/UserRole'
        original_content:
          type: string
        processed_content:
          type: string
        content_hash:
          type: string
        message_type:
          type: string
        created_at:
          type: string
          format: date-time
        edited_at:
          type: string
          format: date-time
        status:
          $ref: '#/components/schemas/MessageStatus'
        moderation_score:
          type: number
          format: float
        moderation_action:
          $ref: '#/components/schemas/ModerationAction'
        contains_pii:
          type: boolean
        pii_types:
          type: array
          items:
            type: string
    ParentalControlCreate:
      type: object
      required:
      - parent_id
      - learner_id
      properties:
        parent_id:
          type: string
          format: uuid
        learner_id:
          type: string
          format: uuid
        ai_tutor_enabled:
          type: boolean
          default: true
        ai_tutor_time_limits:
          type: object
        content_filter_level:
          type: string
          default: strict
        allowed_topics:
          type: array
          items:
            type: string
        blocked_topics:
          type: array
          items:
            type: string
        monitor_all_chats:
          type: boolean
          default: true
        real_time_alerts:
          type: boolean
          default: true
        daily_summaries:
          type: boolean
          default: true
        chat_retention_days:
          type: integer
          default: 365
        auto_delete_enabled:
          type: boolean
          default: false
    ParentalControlResponse:
      allOf:
      - $ref: '#/components/schemas/ParentalControlCreate'
      - type: object
        properties:
          id:
            type: string
            format: uuid
          created_at:
            type: string
            format: date-time
          updated_at:
            type: string
            format: date-time
    ParentalControlUpdate:
      type: object
      properties:
        ai_tutor_enabled:
          type: boolean
        ai_tutor_time_limits:
          type: object
        content_filter_level:
          type: string
        allowed_topics:
          type: array
          items:
            type: string
        blocked_topics:
          type: array
          items:
            type: string
        monitor_all_chats:
          type: boolean
        real_time_alerts:
          type: boolean
        daily_summaries:
          type: boolean
        chat_retention_days:
          type: integer
        auto_delete_enabled:
          type: boolean
    ChatExportRequest:
      type: object
      required:
      - requester_id
      - requester_role
      properties:
        session_ids:
          type: array
          items:
            type: string
            format: uuid
        start_date:
          type: string
          format: date-time
        end_date:
          type: string
          format: date-time
        export_format:
          type: string
          enum:
          - json
          - parquet
          - csv
          default: parquet
        include_pii:
          type: boolean
          default: false
        requester_id:
          type: string
          format: uuid
        requester_role:
          $ref: '#/components/schemas/UserRole'
    ChatDeleteRequest:
      type: object
      required:
      - reason
      - requester_id
      - requester_role
      properties:
        session_ids:
          type: array
          items:
            type: string
            format: uuid
        message_ids:
          type: array
          items:
            type: string
            format: uuid
        hard_delete:
          type: boolean
          default: false
        reason:
          type: string
          minLength: 10
          maxLength: 500
        requester_id:
          type: string
          format: uuid
        requester_role:
          $ref: '#/components/schemas/UserRole'
    ModerationStats:
      type: object
      properties:
        total_messages:
          type: integer
        approved_messages:
          type: integer
        blocked_messages:
          type: integer
        flagged_messages:
          type: integer
        average_processing_time_ms:
          type: number
          format: float
        perspective_api_calls:
          type: integer
        pii_detections:
          type: integer
    ChatSessionStats:
      type: object
      properties:
        total_sessions:
          type: integer
        active_sessions:
          type: integer
        sessions_by_type:
          type: object
          additionalProperties:
            type: integer
        average_session_duration_minutes:
          type: number
          format: float
        messages_per_session:
          type: number
          format: float
    AuditEntryResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        message_id:
          type: string
          format: uuid
        block_hash:
          type: string
        previous_hash:
          type: string
        merkle_root:
          type: string
        timestamp:
          type: string
          format: date-time
        data_hash:
          type: string
        signature:
          type: string
        exported_to_s3:
          type: boolean
        s3_key:
          type: string
        parquet_exported:
          type: boolean
    HealthResponse:
      type: object
      properties:
        status:
          type: string
        service:
          type: string
        version:
          type: string
        database_status:
          type: string
        mongodb_status:
          type: string
        redis_status:
          type: string
        s3_status:
          type: string
    ErrorResponse:
      type: object
      properties:
        error:
          type: string
        message:
          type: string
        details:
          type: object
  responses:
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    NotFound:
      description: Not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
tags:
- name: Audit
  description: Audit operations
- name: Messages
  description: Messages operations
- name: Statistics
  description: Statistics operations
- name: Health
  description: Health operations
- name: Chat Sessions
  description: Chat Sessions operations
- name: Parental Controls
  description: Parental Controls operations
- name: Data Management
  description: Data Management operations
