openapi: 3.1.0
info:
  title: Notification Service API
  version: 1.0.0
  description: Real-time notification delivery with WebSocket, Push, and SMS
  contact:
    name: Aivo API Support
    email: api-support@aivo.com
    url: https://aivo.com/support
servers:
- url: http://localhost:8000
  description: Development server
- url: https://api.api.aivo.com/notify
  description: Production server
paths:
  /ws/notify:
    get:
      summary: WebSocket connection for real-time notifications
      parameters:
      - name: token
        in: query
        required: true
        schema:
          type: string
        description: JWT authentication token
      - name: replay_id
        in: query
        required: false
        schema:
          type: string
        description: Last received message ID for replay
      responses:
        '101':
          description: Switching Protocols - WebSocket connection established
          headers:
            Upgrade:
              description: Upgrade to WebSocket
              schema:
                type: string
                example: websocket
            Connection:
              description: Connection upgrade
              schema:
                type: string
                example: Upgrade
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized - Invalid token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      description: Retrieve all Notify
      operationId: getWsNotify
      tags:
      - ws
  /push/subscribe:
    post:
      summary: Subscribe to push notifications
      security:
      - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PushSubscription'
      responses:
        '200':
          description: Subscription successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
        '401':
          description: Unauthorized
      description: Create a new Subscribe
      operationId: postPushSubscribe
      tags:
      - push
  /push/unsubscribe:
    post:
      summary: Unsubscribe from push notifications
      security:
      - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
              - endpoint
              properties:
                endpoint:
                  type: string
                  description: Push subscription endpoint
      responses:
        '200':
          description: Unsubscription successful
        '401':
          description: Unauthorized
      description: Create a new Unsubscribe
      operationId: postPushUnsubscribe
      tags:
      - push
  /notify:
    post:
      summary: Send notification through available channels
      security:
      - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationRequest'
      responses:
        '200':
          description: Notification sent
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationResponse'
        '400':
          description: Bad request
        '500':
          description: Internal server error
      description: Create a new Notify
      operationId: postNotify
      tags:
      - notify
  /health:
    get:
      summary: Health check endpoint
      responses:
        '200':
          description: Service is healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  timestamp:
                    type: string
                    format: date-time
                  connections:
                    type: integer
      description: Retrieve all Health
      operationId: getHealth
      tags:
      - health
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    PushSubscription:
      type: object
      required:
      - endpoint
      - keys
      properties:
        endpoint:
          type: string
          description: Push service endpoint URL
        keys:
          type: object
          required:
          - p256dh
          - auth
          properties:
            p256dh:
              type: string
              description: P256DH key for encryption
            auth:
              type: string
              description: Auth secret for authentication
        expirationTime:
          type: string
          format: date-time
          nullable: true
    NotificationRequest:
      type: object
      required:
      - user_id
      - notification_type
      - channels
      - template_id
      - data
      properties:
        user_id:
          type: string
          description: Target user ID
        notification_type:
          type: string
          enum:
          - iep_reminder
          - meeting_alert
          - document_update
          - system_message
          - urgent_alert
        channels:
          type: array
          items:
            type: string
            enum:
            - websocket
            - push
            - sms
            - email
        template_id:
          type: string
          description: Notification template ID
        data:
          type: object
          description: Template variables
        locale:
          type: string
          default: en
          description: Language locale
        priority:
          type: string
          enum:
          - low
          - medium
          - high
          - critical
          default: medium
        phone_number:
          type: string
          nullable: true
          description: Phone number for SMS fallback
        queue_if_offline:
          type: boolean
          default: true
          description: Queue notification if user is offline
        ttl:
          type: integer
          default: 86400
          description: Time to live in seconds
    NotificationResponse:
      type: object
      properties:
        notification_id:
          type: string
          description: Unique notification ID
        channels:
          type: object
          additionalProperties:
            type: string
          description: Delivery status per channel
        queued:
          type: boolean
          description: Whether notification was queued
    WebSocketMessage:
      type: object
      properties:
        id:
          type: string
          description: Message ID
        type:
          type: string
          description: Message type (notification, heartbeat, etc.)
        timestamp:
          type: string
          format: date-time
        data:
          type: object
          description: Message payload
        metadata:
          type: object
          nullable: true
    ErrorResponse:
      type: object
      required:
      - error
      - message
      properties:
        error:
          type: string
          description: Error type
        message:
          type: string
          description: Error description
        code:
          type: integer
          description: Error code
tags:
- name: notify
  description: Notify operations
- name: ws
  description: Ws operations
- name: push
  description: Push operations
- name: health
  description: Health operations
